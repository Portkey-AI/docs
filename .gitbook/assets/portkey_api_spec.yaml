components:
  schemas:
    AssistantFileObject:
      description: A list of [Files](/docs/api-reference/files) attached to an `assistant`.
      properties:
        assistant_id:
          description: The assistant ID that the file is attached to.
          type: string
        created_at:
          description: The Unix timestamp (in seconds) for when the assistant file
            was created.
          type: integer
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        object:
          description: The object type, which is always `assistant.file`.
          enum:
          - assistant.file
          type: string
      required:
      - id
      - object
      - created_at
      - assistant_id
      title: Assistant files
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"file-wB6RM6wHdA49HfS2DJ9fEyrH\",\n  \"object\": \"\
          assistant.file\",\n  \"created_at\": 1699055364,\n  \"assistant_id\": \"\
          asst_FBOFvAOHhwEWMghbMGseaPGQ\"\n}\n"
        name: The assistant file object
    AssistantObject:
      description: Represents an `assistant` that can call the model and use tools.
      properties:
        created_at:
          description: The Unix timestamp (in seconds) for when the assistant was
            created.
          type: integer
        description:
          description: 'The description of the assistant. The maximum length is 512
            characters.

            '
          maxLength: 512
          nullable: true
          type: string
        file_ids:
          default: []
          description: 'A list of [file](/docs/api-reference/files) IDs attached to
            this assistant. There can be a maximum of 20 files attached to the assistant.
            Files are ordered by their creation date in ascending order.

            '
          items:
            type: string
          maxItems: 20
          type: array
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        instructions:
          description: 'The system instructions that the assistant uses. The maximum
            length is 32768 characters.

            '
          maxLength: 32768
          nullable: true
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          description: 'ID of the model to use. You can use the [List models](/docs/api-reference/models/list)
            API to see all of your available models, or see our [Model overview](/docs/models/overview)
            for descriptions of them.

            '
          type: string
        name:
          description: 'The name of the assistant. The maximum length is 256 characters.

            '
          maxLength: 256
          nullable: true
          type: string
        object:
          description: The object type, which is always `assistant`.
          enum:
          - assistant
          type: string
        tools:
          default: []
          description: 'A list of tool enabled on the assistant. There can be a maximum
            of 128 tools per assistant. Tools can be of types `code_interpreter`,
            `retrieval`, or `function`.

            '
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
            x-oaiExpandable: true
          maxItems: 128
          type: array
      required:
      - id
      - object
      - created_at
      - name
      - description
      - model
      - instructions
      - tools
      - file_ids
      - metadata
      title: Assistant
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"asst_abc123\",\n  \"object\": \"assistant\",\n  \"\
          created_at\": 1698984975,\n  \"name\": \"Math Tutor\",\n  \"description\"\
          : null,\n  \"model\": \"gpt-4\",\n  \"instructions\": \"You are a personal\
          \ math tutor. When asked a question, write and run Python code to answer\
          \ the question.\",\n  \"tools\": [\n    {\n      \"type\": \"code_interpreter\"\
          \n    }\n  ],\n  \"file_ids\": [],\n  \"metadata\": {}\n}\n"
        name: The assistant object
    AssistantToolsCode:
      properties:
        type:
          description: 'The type of tool being defined: `code_interpreter`'
          enum:
          - code_interpreter
          type: string
      required:
      - type
      title: Code interpreter tool
      type: object
    AssistantToolsFunction:
      properties:
        function:
          $ref: '#/components/schemas/FunctionObject'
        type:
          description: 'The type of tool being defined: `function`'
          enum:
          - function
          type: string
      required:
      - type
      - function
      title: Function tool
      type: object
    AssistantToolsRetrieval:
      properties:
        type:
          description: 'The type of tool being defined: `retrieval`'
          enum:
          - retrieval
          type: string
      required:
      - type
      title: Retrieval tool
      type: object
    ChatCompletionFunctionCallOption:
      description: 'Specifying a particular function via `{"name": "my_function"}`
        forces the model to call that function.

        '
      properties:
        name:
          description: The name of the function to call.
          type: string
      required:
      - name
      type: object
    ChatCompletionFunctions:
      deprecated: true
      properties:
        description:
          description: A description of what the function does, used by the model
            to choose when and how to call the function.
          type: string
        name:
          description: The name of the function to be called. Must be a-z, A-Z, 0-9,
            or contain underscores and dashes, with a maximum length of 64.
          type: string
        parameters:
          $ref: '#/components/schemas/FunctionParameters'
      required:
      - name
      - parameters
      type: object
    ChatCompletionMessageToolCall:
      properties:
        function:
          description: The function that the model called.
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          required:
          - name
          - arguments
          type: object
        id:
          description: The ID of the tool call.
          type: string
        type:
          description: The type of the tool. Currently, only `function` is supported.
          enum:
          - function
          type: string
      required:
      - id
      - type
      - function
      type: object
    ChatCompletionMessageToolCallChunk:
      properties:
        function:
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          type: object
        id:
          description: The ID of the tool call.
          type: string
        index:
          type: integer
        type:
          description: The type of the tool. Currently, only `function` is supported.
          enum:
          - function
          type: string
      required:
      - index
      type: object
    ChatCompletionMessageToolCalls:
      description: The tool calls generated by the model, such as function calls.
      items:
        $ref: '#/components/schemas/ChatCompletionMessageToolCall'
      type: array
    ChatCompletionNamedToolChoice:
      description: Specifies a tool the model should use. Use to force the model to
        call a specific function.
      properties:
        function:
          properties:
            name:
              description: The name of the function to call.
              type: string
          required:
          - name
          type: object
        type:
          description: The type of the tool. Currently, only `function` is supported.
          enum:
          - function
          type: string
      type: object
    ChatCompletionRequestAssistantMessage:
      properties:
        content:
          description: 'The contents of the assistant message.

            '
          nullable: true
          type: string
        function_call:
          deprecated: true
          description: Deprecated and replaced by `tool_calls`. The name and arguments
            of a function that should be called, as generated by the model.
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          required:
          - arguments
          - name
          type: object
        role:
          description: The role of the messages author, in this case `assistant`.
          enum:
          - assistant
          type: string
        tool_calls:
          $ref: '#/components/schemas/ChatCompletionMessageToolCalls'
      required:
      - content
      - role
      title: Assistant message
      type: object
    ChatCompletionRequestFunctionMessage:
      deprecated: true
      properties:
        content:
          description: The return value from the function call, to return to the model.
          nullable: true
          type: string
        name:
          description: The name of the function to call.
          type: string
        role:
          description: The role of the messages author, in this case `function`.
          enum:
          - function
          type: string
      required:
      - role
      - name
      - content
      title: Function message
      type: object
    ChatCompletionRequestMessage:
      oneOf:
      - $ref: '#/components/schemas/ChatCompletionRequestSystemMessage'
      - $ref: '#/components/schemas/ChatCompletionRequestUserMessage'
      - $ref: '#/components/schemas/ChatCompletionRequestAssistantMessage'
      - $ref: '#/components/schemas/ChatCompletionRequestToolMessage'
      - $ref: '#/components/schemas/ChatCompletionRequestFunctionMessage'
      x-oaiExpandable: true
    ChatCompletionRequestMessageContentPart:
      oneOf:
      - $ref: '#/components/schemas/ChatCompletionRequestMessageContentPartText'
      - $ref: '#/components/schemas/ChatCompletionRequestMessageContentPartImage'
      x-oaiExpandable: true
    ChatCompletionRequestMessageContentPartImage:
      properties:
        image_url:
          properties:
            detail:
              default: auto
              description: Specifies the detail level of the image.
              enum:
              - auto
              - low
              - high
              type: string
            url:
              description: Either a URL of the image or the base64 encoded image data.
              format: uri
              type: string
          required:
          - url
          type: object
        type:
          description: The type of the content part.
          enum:
          - image_url
          type: string
      required:
      - type
      - image_url
      title: Image content part
      type: object
    ChatCompletionRequestMessageContentPartText:
      properties:
        text:
          description: The text content.
          type: string
        type:
          description: The type of the content part.
          enum:
          - text
          type: string
      required:
      - type
      - text
      title: Text content part
      type: object
    ChatCompletionRequestSystemMessage:
      properties:
        content:
          description: The contents of the system message.
          nullable: true
          type: string
        role:
          description: The role of the messages author, in this case `system`.
          enum:
          - system
          type: string
      required:
      - content
      - role
      title: System message
      type: object
    ChatCompletionRequestToolMessage:
      properties:
        content:
          description: The contents of the tool message.
          nullable: true
          type: string
        role:
          description: The role of the messages author, in this case `tool`.
          enum:
          - tool
          type: string
        tool_call_id:
          description: Tool call that this message is responding to.
          type: string
      required:
      - role
      - content
      - tool_call_id
      title: Tool message
      type: object
    ChatCompletionRequestUserMessage:
      properties:
        content:
          description: 'The contents of the user message.

            '
          nullable: true
          oneOf:
          - description: The text contents of the message.
            title: Text content
            type: string
          - description: An array of content parts with a defined type, each can be
              of type `text` or `image_url` when passing in images. You can pass multiple
              images by adding multiple `image_url` content parts. Image input is
              only supported when using the `gpt-4-visual-preview` model.
            items:
              $ref: '#/components/schemas/ChatCompletionRequestMessageContentPart'
            minItems: 1
            title: Array of content parts
            type: array
        role:
          description: The role of the messages author, in this case `user`.
          enum:
          - user
          type: string
      required:
      - content
      - role
      title: User message
      type: object
    ChatCompletionResponseMessage:
      description: A chat completion message generated by the model.
      properties:
        content:
          description: The contents of the message.
          nullable: true
          type: string
        function_call:
          deprecated: true
          description: Deprecated and replaced by `tool_calls`. The name and arguments
            of a function that should be called, as generated by the model.
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          required:
          - name
          - arguments
          type: object
        role:
          description: The role of the author of this message.
          enum:
          - assistant
          type: string
        tool_calls:
          $ref: '#/components/schemas/ChatCompletionMessageToolCalls'
      required:
      - role
      - content
      type: object
    ChatCompletionRole:
      description: The role of the author of a message
      enum:
      - system
      - user
      - assistant
      - tool
      - function
      type: string
    ChatCompletionStreamResponseDelta:
      description: A chat completion delta generated by streamed model responses.
      properties:
        content:
          description: The contents of the chunk message.
          nullable: true
          type: string
        function_call:
          deprecated: true
          description: Deprecated and replaced by `tool_calls`. The name and arguments
            of a function that should be called, as generated by the model.
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          type: object
        role:
          description: The role of the author of this message.
          enum:
          - system
          - user
          - assistant
          - tool
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ChatCompletionMessageToolCallChunk'
          type: array
      type: object
    ChatCompletionTool:
      properties:
        function:
          $ref: '#/components/schemas/FunctionObject'
        type:
          description: The type of the tool. Currently, only `function` is supported.
          enum:
          - function
          type: string
      required:
      - type
      - function
      type: object
    ChatCompletionToolChoiceOption:
      description: 'Controls which (if any) function is called by the model.

        `none` means the model will not call a function and instead generates a message.

        `auto` means the model can pick between generating a message or calling a
        function.

        Specifying a particular function via `{"type: "function", "function": {"name":
        "my_function"}}` forces the model to call that function.


        `none` is the default when no functions are present. `auto` is the default
        if functions are present.

        '
      oneOf:
      - description: '`none` means the model will not call a function and instead
          generates a message. `auto` means the model can pick between generating
          a message or calling a function.

          '
        enum:
        - none
        - auto
        type: string
      - $ref: '#/components/schemas/ChatCompletionNamedToolChoice'
      x-oaiExpandable: true
    CompletionUsage:
      description: Usage statistics for the completion request.
      properties:
        completion_tokens:
          description: Number of tokens in the generated completion.
          type: integer
        prompt_tokens:
          description: Number of tokens in the prompt.
          type: integer
        total_tokens:
          description: Total number of tokens used in the request (prompt + completion).
          type: integer
      required:
      - prompt_tokens
      - completion_tokens
      - total_tokens
      type: object
    CreateAssistantFileRequest:
      additionalProperties: false
      properties:
        file_id:
          description: A [File](/docs/api-reference/files) ID (with `purpose="assistants"`)
            that the assistant should use. Useful for tools like `retrieval` and `code_interpreter`
            that can access files.
          type: string
      required:
      - file_id
      type: object
    CreateAssistantRequest:
      additionalProperties: false
      properties:
        description:
          description: 'The description of the assistant. The maximum length is 512
            characters.

            '
          maxLength: 512
          nullable: true
          type: string
        file_ids:
          default: []
          description: 'A list of [file](/docs/api-reference/files) IDs attached to
            this assistant. There can be a maximum of 20 files attached to the assistant.
            Files are ordered by their creation date in ascending order.

            '
          items:
            type: string
          maxItems: 20
          type: array
        instructions:
          description: 'The system instructions that the assistant uses. The maximum
            length is 32768 characters.

            '
          maxLength: 32768
          nullable: true
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          anyOf:
          - type: string
          description: 'ID of the model to use. You can use the [List models](/docs/api-reference/models/list)
            API to see all of your available models, or see our [Model overview](/docs/models/overview)
            for descriptions of them.

            '
        name:
          description: 'The name of the assistant. The maximum length is 256 characters.

            '
          maxLength: 256
          nullable: true
          type: string
        tools:
          default: []
          description: 'A list of tool enabled on the assistant. There can be a maximum
            of 128 tools per assistant. Tools can be of types `code_interpreter`,
            `retrieval`, or `function`.

            '
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
            x-oaiExpandable: true
          maxItems: 128
          type: array
      required:
      - model
      type: object
    CreateChatCompletionFunctionResponse:
      description: Represents a chat completion response returned by model, based
        on the provided input.
      properties:
        choices:
          description: A list of chat completion choices. Can be more than one if
            `n` is greater than 1.
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence, `length` if the maximum number of tokens specified
                  in the request was reached, `content_filter` if content was omitted
                  due to a flag from our content filters, or `function_call` if the
                  model called a function.

                  '
                enum:
                - stop
                - length
                - function_call
                - content_filter
                type: string
              index:
                description: The index of the choice in the list of choices.
                type: integer
              message:
                $ref: '#/components/schemas/ChatCompletionResponseMessage'
            required:
            - finish_reason
            - index
            - message
            type: object
          type: array
        created:
          description: The Unix timestamp (in seconds) of when the chat completion
            was created.
          type: integer
        id:
          description: A unique identifier for the chat completion.
          type: string
        model:
          description: The model used for the chat completion.
          type: string
        object:
          description: The object type, which is always `chat.completion`.
          enum:
          - chat.completion
          type: string
        system_fingerprint:
          description: 'This fingerprint represents the backend configuration that
            the model runs with.


            Can be used in conjunction with the `seed` request parameter to understand
            when backend changes have been made that might impact determinism.

            '
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      required:
      - choices
      - created
      - id
      - model
      - object
      type: object
      x-oaiMeta:
        example: "{\n  \"choices\": [\n    {\n      \"finish_reason\": \"function_call\"\
          ,\n      \"index\": 0,\n      \"message\": {\n        \"content\": null,\n\
          \        \"function_call\": {\n          \"arguments\": \"{\\n  \\\"location\\\
          \": \\\"Boston, MA\\\"\\n}\",\n          \"name\": \"get_current_weather\"\
          \n        },\n        \"role\": \"assistant\"\n      }\n    }\n  ],\n  \"\
          created\": 1694028367,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"system_fingerprint\"\
          : \"fp_44709d6fcb\",\n  \"object\": \"chat.completion\",\n  \"usage\": {\n\
          \    \"completion_tokens\": 18,\n    \"prompt_tokens\": 82,\n    \"total_tokens\"\
          : 100\n  }\n}\n"
        group: chat
        name: The chat completion object
    CreateChatCompletionImageResponse:
      description: Represents a streamed chunk of a chat completion response returned
        by model, based on the provided input.
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\"\
          ,\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"\
          system_fingerprint\": \"fp_44709d6fcb\",\n  \"choices\": [{\n    \"index\"\
          : 0,\n    \"message\": {\n      \"role\": \"assistant\",\n      \"content\"\
          : \"\\n\\nHello there, how may I assist you today?\",\n    },\n    \"finish_reason\"\
          : \"stop\"\n  }],\n  \"usage\": {\n    \"prompt_tokens\": 9,\n    \"completion_tokens\"\
          : 12,\n    \"total_tokens\": 21\n  }\n}\n"
        group: chat
        name: The chat completion chunk object
    CreateChatCompletionRequest:
      properties:
        frequency_penalty:
          default: 0
          description: 'Number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far, decreasing
            the model''s likelihood to repeat the same line verbatim.


            [See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)

            '
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        function_call:
          deprecated: true
          description: 'Deprecated in favor of `tool_choice`.


            Controls which (if any) function is called by the model.

            `none` means the model will not call a function and instead generates
            a message.

            `auto` means the model can pick between generating a message or calling
            a function.

            Specifying a particular function via `{"name": "my_function"}` forces
            the model to call that function.


            `none` is the default when no functions are present. `auto`` is the default
            if functions are present.

            '
          oneOf:
          - description: '`none` means the model will not call a function and instead
              generates a message. `auto` means the model can pick between generating
              a message or calling a function.

              '
            enum:
            - none
            - auto
            type: string
          - $ref: '#/components/schemas/ChatCompletionFunctionCallOption'
          x-oaiExpandable: true
        functions:
          deprecated: true
          description: 'Deprecated in favor of `tools`.


            A list of functions the model may generate JSON inputs for.

            '
          items:
            $ref: '#/components/schemas/ChatCompletionFunctions'
          maxItems: 128
          minItems: 1
          type: array
        logit_bias:
          additionalProperties:
            type: integer
          default: null
          description: 'Modify the likelihood of specified tokens appearing in the
            completion.


            Accepts a JSON object that maps tokens (specified by their token ID in
            the tokenizer) to an associated bias value from -100 to 100. Mathematically,
            the bias is added to the logits generated by the model prior to sampling.
            The exact effect will vary per model, but values between -1 and 1 should
            decrease or increase likelihood of selection; values like -100 or 100
            should result in a ban or exclusive selection of the relevant token.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        max_tokens:
          default: inf
          description: 'The maximum number of [tokens](/tokenizer) to generate in
            the chat completion.


            The total length of input tokens and generated tokens is limited by the
            model''s context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)
            for counting tokens.

            '
          nullable: true
          type: integer
        messages:
          description: A list of messages comprising the conversation so far. [Example
            Python code](https://cookbook.openai.com/examples/how_to_format_inputs_to_chatgpt_models).
          items:
            $ref: '#/components/schemas/ChatCompletionRequestMessage'
          minItems: 1
          type: array
        model:
          anyOf:
          - type: string
          - enum:
            - gpt-4-1106-preview
            - gpt-4-vision-preview
            - gpt-4
            - gpt-4-0314
            - gpt-4-0613
            - gpt-4-32k
            - gpt-4-32k-0314
            - gpt-4-32k-0613
            - gpt-3.5-turbo
            - gpt-3.5-turbo-16k
            - gpt-3.5-turbo-0301
            - gpt-3.5-turbo-0613
            - gpt-3.5-turbo-16k-0613
            type: string
          description: ID of the model to use. See the [model endpoint compatibility](/docs/models/model-endpoint-compatibility)
            table for details on which models work with the Chat API.
          example: gpt-3.5-turbo
          x-oaiTypeLabel: string
        n:
          default: 1
          description: How many chat completion choices to generate for each input
            message.
          example: 1
          maximum: 128
          minimum: 1
          nullable: true
          type: integer
        presence_penalty:
          default: 0
          description: 'Number between -2.0 and 2.0. Positive values penalize new
            tokens based on whether they appear in the text so far, increasing the
            model''s likelihood to talk about new topics.


            [See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)

            '
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        response_format:
          description: "An object specifying the format that the model must output.\
            \ \n\nSetting to `{ \"type\": \"json_object\" }` enables JSON mode, which\
            \ guarantees the message the model generates is valid JSON.\n\n**Important:**\
            \ when using JSON mode, you **must** also instruct the model to produce\
            \ JSON yourself via a system or user message. Without this, the model\
            \ may generate an unending stream of whitespace until the generation reaches\
            \ the token limit, resulting in increased latency and appearance of a\
            \ \"stuck\" request. Also note that the message content may be partially\
            \ cut off if `finish_reason=\"length\"`, which indicates the generation\
            \ exceeded `max_tokens` or the conversation exceeded the max context length.\n"
          properties:
            type:
              default: text
              description: Must be one of `text` or `json_object`.
              enum:
              - text
              - json_object
              example: json_object
              type: string
          type: object
        seed:
          description: "This feature is in Beta. \nIf specified, our system will make\
            \ a best effort to sample deterministically, such that repeated requests\
            \ with the same `seed` and parameters should return the same result.\n\
            Determinism is not guaranteed, and you should refer to the `system_fingerprint`\
            \ response parameter to monitor changes in the backend.\n"
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          nullable: true
          type: integer
          x-oaiMeta:
            beta: true
        stop:
          default: null
          description: 'Up to 4 sequences where the API will stop generating further
            tokens.

            '
          oneOf:
          - nullable: true
            type: string
          - items:
              type: string
            maxItems: 4
            minItems: 1
            type: array
        stream:
          default: false
          description: 'If set, partial message deltas will be sent, like in ChatGPT.
            Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)
            as they become available, with the stream terminated by a `data: [DONE]`
            message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

            '
          nullable: true
          type: boolean
        temperature:
          default: 1
          description: 'What sampling temperature to use, between 0 and 2. Higher
            values like 0.8 will make the output more random, while lower values like
            0.2 will make it more focused and deterministic.


            We generally recommend altering this or `top_p` but not both.

            '
          example: 1
          maximum: 2
          minimum: 0
          nullable: true
          type: number
        tool_choice:
          $ref: '#/components/schemas/ChatCompletionToolChoiceOption'
        tools:
          description: 'A list of tools the model may call. Currently, only functions
            are supported as a tool. Use this to provide a list of functions the model
            may generate JSON inputs for.

            '
          items:
            $ref: '#/components/schemas/ChatCompletionTool'
          type: array
        top_p:
          default: 1
          description: 'An alternative to sampling with temperature, called nucleus
            sampling, where the model considers the results of the tokens with top_p
            probability mass. So 0.1 means only the tokens comprising the top 10%
            probability mass are considered.


            We generally recommend altering this or `temperature` but not both.

            '
          example: 1
          maximum: 1
          minimum: 0
          nullable: true
          type: number
        user: &id001
          description: 'A unique identifier representing your end-user, which can
            help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

            '
          example: user-1234
          type: string
      required:
      - model
      - messages
      type: object
    CreateChatCompletionResponse:
      description: Represents a chat completion response returned by model, based
        on the provided input.
      properties:
        choices:
          description: A list of chat completion choices. Can be more than one if
            `n` is greater than 1.
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  `length` if the maximum number of tokens specified in the request
                  was reached,

                  `content_filter` if content was omitted due to a flag from our content
                  filters,

                  `tool_calls` if the model called a tool, or `function_call` (deprecated)
                  if the model called a function.

                  '
                enum:
                - stop
                - length
                - tool_calls
                - content_filter
                - function_call
                type: string
              index:
                description: The index of the choice in the list of choices.
                type: integer
              message:
                $ref: '#/components/schemas/ChatCompletionResponseMessage'
            required:
            - finish_reason
            - index
            - message
            type: object
          type: array
        created:
          description: The Unix timestamp (in seconds) of when the chat completion
            was created.
          type: integer
        id:
          description: A unique identifier for the chat completion.
          type: string
        model:
          description: The model used for the chat completion.
          type: string
        object:
          description: The object type, which is always `chat.completion`.
          enum:
          - chat.completion
          type: string
        system_fingerprint:
          description: 'This fingerprint represents the backend configuration that
            the model runs with.


            Can be used in conjunction with the `seed` request parameter to understand
            when backend changes have been made that might impact determinism.

            '
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      required:
      - choices
      - created
      - id
      - model
      - object
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\"\
          ,\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"\
          system_fingerprint\": \"fp_44709d6fcb\",\n  \"choices\": [{\n    \"index\"\
          : 0,\n    \"message\": {\n      \"role\": \"assistant\",\n      \"content\"\
          : \"\\n\\nHello there, how may I assist you today?\",\n    },\n    \"finish_reason\"\
          : \"stop\"\n  }],\n  \"usage\": {\n    \"prompt_tokens\": 9,\n    \"completion_tokens\"\
          : 12,\n    \"total_tokens\": 21\n  }\n}\n"
        group: chat
        name: The chat completion object
    CreateChatCompletionStreamResponse:
      description: Represents a streamed chunk of a chat completion response returned
        by model, based on the provided input.
      properties:
        choices:
          description: A list of chat completion choices. Can be more than one if
            `n` is greater than 1.
          items:
            properties:
              delta:
                $ref: '#/components/schemas/ChatCompletionStreamResponseDelta'
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  `length` if the maximum number of tokens specified in the request
                  was reached,

                  `content_filter` if content was omitted due to a flag from our content
                  filters,

                  `tool_calls` if the model called a tool, or `function_call` (deprecated)
                  if the model called a function.

                  '
                enum:
                - stop
                - length
                - tool_calls
                - content_filter
                - function_call
                nullable: true
                type: string
              index:
                description: The index of the choice in the list of choices.
                type: integer
            required:
            - delta
            - finish_reason
            - index
            type: object
          type: array
        created:
          description: The Unix timestamp (in seconds) of when the chat completion
            was created. Each chunk has the same timestamp.
          type: integer
        id:
          description: A unique identifier for the chat completion. Each chunk has
            the same ID.
          type: string
        model:
          description: The model to generate the completion.
          type: string
        object:
          description: The object type, which is always `chat.completion.chunk`.
          enum:
          - chat.completion.chunk
          type: string
        system_fingerprint:
          description: 'This fingerprint represents the backend configuration that
            the model runs with.

            Can be used in conjunction with the `seed` request parameter to understand
            when backend changes have been made that might impact determinism.

            '
          type: string
      required:
      - choices
      - created
      - id
      - model
      - object
      type: object
      x-oaiMeta:
        example: '{"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"role":"assistant","content":""},"finish_reason":null}]}


          {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"Hello"},"finish_reason":null}]}


          {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"!"},"finish_reason":null}]}


          ....


          {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"
          today"},"finish_reason":null}]}


          {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"?"},"finish_reason":null}]}


          {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
          "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{},"finish_reason":"stop"}]}

          '
        group: chat
        name: The chat completion chunk object
    CreateCompletionRequest:
      properties:
        best_of:
          default: 1
          description: "Generates `best_of` completions server-side and returns the\
            \ \"best\" (the one with the highest log probability per token). Results\
            \ cannot be streamed.\n\nWhen used with `n`, `best_of` controls the number\
            \ of candidate completions and `n` specifies how many to return \u2013\
            \ `best_of` must be greater than `n`.\n\n**Note:** Because this parameter\
            \ generates many completions, it can quickly consume your token quota.\
            \ Use carefully and ensure that you have reasonable settings for `max_tokens`\
            \ and `stop`.\n"
          maximum: 20
          minimum: 0
          nullable: true
          type: integer
        echo:
          default: false
          description: 'Echo back the prompt in addition to the completion

            '
          nullable: true
          type: boolean
        frequency_penalty:
          default: 0
          description: 'Number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far, decreasing
            the model''s likelihood to repeat the same line verbatim.


            [See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)

            '
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        logit_bias:
          additionalProperties:
            type: integer
          default: null
          description: 'Modify the likelihood of specified tokens appearing in the
            completion.


            Accepts a JSON object that maps tokens (specified by their token ID in
            the GPT tokenizer) to an associated bias value from -100 to 100. You can
            use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2
            and GPT-3) to convert text to token IDs. Mathematically, the bias is added
            to the logits generated by the model prior to sampling. The exact effect
            will vary per model, but values between -1 and 1 should decrease or increase
            likelihood of selection; values like -100 or 100 should result in a ban
            or exclusive selection of the relevant token.


            As an example, you can pass `{"50256": -100}` to prevent the <|endoftext|>
            token from being generated.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        logprobs:
          default: null
          description: 'Include the log probabilities on the `logprobs` most likely
            tokens, as well the chosen tokens. For example, if `logprobs` is 5, the
            API will return a list of the 5 most likely tokens. The API will always
            return the `logprob` of the sampled token, so there may be up to `logprobs+1`
            elements in the response.


            The maximum value for `logprobs` is 5.

            '
          maximum: 5
          minimum: 0
          nullable: true
          type: integer
        max_tokens:
          default: 16
          description: 'The maximum number of [tokens](/tokenizer) to generate in
            the completion.


            The token count of your prompt plus `max_tokens` cannot exceed the model''s
            context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)
            for counting tokens.

            '
          example: 16
          minimum: 0
          nullable: true
          type: integer
        model:
          anyOf:
          - type: string
          - enum:
            - babbage-002
            - davinci-002
            - gpt-3.5-turbo-instruct
            - text-davinci-003
            - text-davinci-002
            - text-davinci-001
            - code-davinci-002
            - text-curie-001
            - text-babbage-001
            - text-ada-001
            type: string
          description: 'ID of the model to use. You can use the [List models](/docs/api-reference/models/list)
            API to see all of your available models, or see our [Model overview](/docs/models/overview)
            for descriptions of them.

            '
          x-oaiTypeLabel: string
        n:
          default: 1
          description: 'How many completions to generate for each prompt.


            **Note:** Because this parameter generates many completions, it can quickly
            consume your token quota. Use carefully and ensure that you have reasonable
            settings for `max_tokens` and `stop`.

            '
          example: 1
          maximum: 128
          minimum: 1
          nullable: true
          type: integer
        presence_penalty:
          default: 0
          description: 'Number between -2.0 and 2.0. Positive values penalize new
            tokens based on whether they appear in the text so far, increasing the
            model''s likelihood to talk about new topics.


            [See more information about frequency and presence penalties.](/docs/guides/gpt/parameter-details)

            '
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        prompt:
          default: <|endoftext|>
          description: 'The prompt(s) to generate completions for, encoded as a string,
            array of strings, array of tokens, or array of token arrays.


            Note that <|endoftext|> is the document separator that the model sees
            during training, so if a prompt is not specified the model will generate
            as if from the beginning of a new document.

            '
          nullable: true
          oneOf:
          - default: ''
            example: This is a test.
            type: string
          - items:
              default: ''
              example: This is a test.
              type: string
            type: array
          - example: '[1212, 318, 257, 1332, 13]'
            items:
              type: integer
            minItems: 1
            type: array
          - example: '[[1212, 318, 257, 1332, 13]]'
            items:
              items:
                type: integer
              minItems: 1
              type: array
            minItems: 1
            type: array
        seed:
          description: 'If specified, our system will make a best effort to sample
            deterministically, such that repeated requests with the same `seed` and
            parameters should return the same result.


            Determinism is not guaranteed, and you should refer to the `system_fingerprint`
            response parameter to monitor changes in the backend.

            '
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          nullable: true
          type: integer
        stop:
          default: null
          description: 'Up to 4 sequences where the API will stop generating further
            tokens. The returned text will not contain the stop sequence.

            '
          nullable: true
          oneOf:
          - default: <|endoftext|>
            example: '

              '
            nullable: true
            type: string
          - items:
              example: '["\n"]'
              type: string
            maxItems: 4
            minItems: 1
            type: array
        stream:
          default: false
          description: 'Whether to stream back partial progress. If set, tokens will
            be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)
            as they become available, with the stream terminated by a `data: [DONE]`
            message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

            '
          nullable: true
          type: boolean
        suffix:
          default: null
          description: The suffix that comes after a completion of inserted text.
          example: test.
          nullable: true
          type: string
        temperature:
          default: 1
          description: 'What sampling temperature to use, between 0 and 2. Higher
            values like 0.8 will make the output more random, while lower values like
            0.2 will make it more focused and deterministic.


            We generally recommend altering this or `top_p` but not both.

            '
          example: 1
          maximum: 2
          minimum: 0
          nullable: true
          type: number
        top_p:
          default: 1
          description: 'An alternative to sampling with temperature, called nucleus
            sampling, where the model considers the results of the tokens with top_p
            probability mass. So 0.1 means only the tokens comprising the top 10%
            probability mass are considered.


            We generally recommend altering this or `temperature` but not both.

            '
          example: 1
          maximum: 1
          minimum: 0
          nullable: true
          type: number
        user: *id001
      required:
      - model
      - prompt
      type: object
    CreateCompletionResponse:
      description: 'Represents a completion response from the API. Note: both the
        streamed and non-streamed response objects share the same shape (unlike the
        chat endpoint).

        '
      properties:
        choices:
          description: The list of completion choices the model generated for the
            input prompt.
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  `length` if the maximum number of tokens specified in the request
                  was reached,

                  or `content_filter` if content was omitted due to a flag from our
                  content filters.

                  '
                enum:
                - stop
                - length
                - content_filter
                type: string
              index:
                type: integer
              logprobs:
                nullable: true
                properties:
                  text_offset:
                    items:
                      type: integer
                    type: array
                  token_logprobs:
                    items:
                      type: number
                    type: array
                  tokens:
                    items:
                      type: string
                    type: array
                  top_logprobs:
                    items:
                      additionalProperties:
                        type: number
                      type: object
                    type: array
                type: object
              text:
                type: string
            required:
            - finish_reason
            - index
            - logprobs
            - text
            type: object
          type: array
        created:
          description: The Unix timestamp (in seconds) of when the completion was
            created.
          type: integer
        id:
          description: A unique identifier for the completion.
          type: string
        model:
          description: The model used for completion.
          type: string
        object:
          description: The object type, which is always "text_completion"
          enum:
          - text_completion
          type: string
        system_fingerprint:
          description: 'This fingerprint represents the backend configuration that
            the model runs with.


            Can be used in conjunction with the `seed` request parameter to understand
            when backend changes have been made that might impact determinism.

            '
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      required:
      - id
      - object
      - created
      - model
      - choices
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7\",\n  \"object\": \"\
          text_completion\",\n  \"created\": 1589478378,\n  \"model\": \"gpt-3.5-turbo\"\
          ,\n  \"choices\": [\n    {\n      \"text\": \"\\n\\nThis is indeed a test\"\
          ,\n      \"index\": 0,\n      \"logprobs\": null,\n      \"finish_reason\"\
          : \"length\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 5,\n \
          \   \"completion_tokens\": 7,\n    \"total_tokens\": 12\n  }\n}\n"
        legacy: true
        name: The completion object
    CreateEditRequest:
      properties:
        input:
          default: ''
          description: The input text to use as a starting point for the edit.
          example: What day of the wek is it?
          nullable: true
          type: string
        instruction:
          description: The instruction that tells the model how to edit the prompt.
          example: Fix the spelling mistakes.
          type: string
        model:
          anyOf:
          - type: string
          - enum:
            - text-davinci-edit-001
            - code-davinci-edit-001
            type: string
          description: ID of the model to use. You can use the `text-davinci-edit-001`
            or `code-davinci-edit-001` model with this endpoint.
          example: text-davinci-edit-001
          x-oaiTypeLabel: string
        n:
          default: 1
          description: How many edits to generate for the input and instruction.
          example: 1
          maximum: 20
          minimum: 1
          nullable: true
          type: integer
        temperature:
          default: 1
          description: 'What sampling temperature to use, between 0 and 2. Higher
            values like 0.8 will make the output more random, while lower values like
            0.2 will make it more focused and deterministic.


            We generally recommend altering this or `top_p` but not both.

            '
          example: 1
          maximum: 2
          minimum: 0
          nullable: true
          type: number
        top_p:
          default: 1
          description: 'An alternative to sampling with temperature, called nucleus
            sampling, where the model considers the results of the tokens with top_p
            probability mass. So 0.1 means only the tokens comprising the top 10%
            probability mass are considered.


            We generally recommend altering this or `temperature` but not both.

            '
          example: 1
          maximum: 1
          minimum: 0
          nullable: true
          type: number
      required:
      - model
      - instruction
      type: object
    CreateEditResponse:
      deprecated: true
      properties:
        choices:
          description: A list of edit choices. Can be more than one if `n` is greater
            than 1.
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  `length` if the maximum number of tokens specified in the request
                  was reached,

                  or `content_filter` if content was omitted due to a flag from our
                  content filters.

                  '
                enum:
                - stop
                - length
                type: string
              index:
                description: The index of the choice in the list of choices.
                type: integer
              text:
                description: The edited result.
                type: string
            required:
            - text
            - index
            - finish_reason
            type: object
          type: array
        created:
          description: The Unix timestamp (in seconds) of when the edit was created.
          type: integer
        object:
          description: The object type, which is always `edit`.
          enum:
          - edit
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      required:
      - object
      - created
      - choices
      - usage
      title: Edit
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"edit\",\n  \"created\": 1589478378,\n  \"choices\"\
          : [\n    {\n      \"text\": \"What day of the week is it?\",\n      \"index\"\
          : 0,\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 25,\n    \"completion_tokens\"\
          : 32,\n    \"total_tokens\": 57\n  }\n}\n"
        name: The edit object
    CreateEmbeddingRequest:
      additionalProperties: false
      properties:
        encoding_format:
          default: float
          description: The format to return the embeddings in. Can be either `float`
            or [`base64`](https://pypi.org/project/pybase64/).
          enum:
          - float
          - base64
          example: float
          type: string
        input:
          description: 'Input text to embed, encoded as a string or array of tokens.
            To embed multiple inputs in a single request, pass an array of strings
            or array of token arrays. The input must not exceed the max input tokens
            for the model (8192 tokens for `text-embedding-ada-002`) and cannot be
            an empty string. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken)
            for counting tokens.

            '
          example: The quick brown fox jumped over the lazy dog
          oneOf:
          - default: ''
            example: This is a test.
            type: string
          - items:
              default: ''
              example: This is a test.
              type: string
            minItems: 1
            type: array
          - example: '[1212, 318, 257, 1332, 13]'
            items:
              type: integer
            minItems: 1
            type: array
          - example: '[[1212, 318, 257, 1332, 13]]'
            items:
              items:
                type: integer
              minItems: 1
              type: array
            minItems: 1
            type: array
        model:
          anyOf:
          - type: string
          - enum:
            - text-embedding-ada-002
            type: string
          description: 'ID of the model to use. You can use the [List models](/docs/api-reference/models/list)
            API to see all of your available models, or see our [Model overview](/docs/models/overview)
            for descriptions of them.

            '
          example: text-embedding-ada-002
          x-oaiTypeLabel: string
        user: *id001
      required:
      - model
      - input
      type: object
    CreateEmbeddingResponse:
      properties:
        data:
          description: The list of embeddings generated by the model.
          items:
            $ref: '#/components/schemas/Embedding'
          type: array
        model:
          description: The name of the model used to generate the embedding.
          type: string
        object:
          description: The object type, which is always "list".
          enum:
          - list
          type: string
        usage:
          description: The usage information for the request.
          properties:
            prompt_tokens:
              description: The number of tokens used by the prompt.
              type: integer
            total_tokens:
              description: The total number of tokens used by the request.
              type: integer
          required:
          - prompt_tokens
          - total_tokens
          type: object
      required:
      - object
      - model
      - data
      - usage
      type: object
    CreateFileRequest:
      additionalProperties: false
      properties:
        file:
          description: 'The File object (not file name) to be uploaded.

            '
          format: binary
          type: string
        purpose:
          description: 'The intended purpose of the uploaded file.


            Use "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning) and
            "assistants" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages).
            This allows us to validate the format of the uploaded file is correct
            for fine-tuning.

            '
          enum:
          - fine-tune
          - assistants
          type: string
      required:
      - file
      - purpose
      type: object
    CreateFineTuneRequest:
      properties:
        batch_size:
          default: null
          description: 'The batch size to use for training. The batch size is the
            number of

            training examples used to train a single forward and backward pass.


            By default, the batch size will be dynamically configured to be

            ~0.2% of the number of examples in the training set, capped at 256 -

            in general, we''ve found that larger batch sizes tend to work better

            for larger datasets.

            '
          nullable: true
          type: integer
        classification_betas:
          default: null
          description: 'If this is provided, we calculate F-beta scores at the specified

            beta values. The F-beta score is a generalization of F-1 score.

            This is only used for binary classification.


            With a beta of 1 (i.e. the F-1 score), precision and recall are

            given the same weight. A larger beta score puts more weight on

            recall and less on precision. A smaller beta score puts more weight

            on precision and less on recall.

            '
          example:
          - 0.6
          - 1
          - 1.5
          - 2
          items:
            type: number
          nullable: true
          type: array
        classification_n_classes:
          default: null
          description: 'The number of classes in a classification task.


            This parameter is required for multiclass classification.

            '
          nullable: true
          type: integer
        classification_positive_class:
          default: null
          description: 'The positive class in binary classification.


            This parameter is needed to generate precision, recall, and F1

            metrics when doing binary classification.

            '
          nullable: true
          type: string
        compute_classification_metrics:
          default: false
          description: 'If set, we calculate classification-specific metrics such
            as accuracy

            and F-1 score using the validation set at the end of every epoch.

            These metrics can be viewed in the [results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).


            In order to compute classification metrics, you must provide a

            `validation_file`. Additionally, you must

            specify `classification_n_classes` for multiclass classification or

            `classification_positive_class` for binary classification.

            '
          nullable: true
          type: boolean
        hyperparameters:
          description: The hyperparameters used for the fine-tuning job.
          properties:
            n_epochs:
              default: auto
              description: 'The number of epochs to train the model for. An epoch
                refers to one

                full cycle through the training dataset.

                '
              oneOf:
              - enum:
                - auto
                type: string
              - maximum: 50
                minimum: 1
                type: integer
          type: object
        learning_rate_multiplier:
          default: null
          description: 'The learning rate multiplier to use for training.

            The fine-tuning learning rate is the original learning rate used for

            pretraining multiplied by this value.


            By default, the learning rate multiplier is the 0.05, 0.1, or 0.2

            depending on final `batch_size` (larger learning rates tend to

            perform better with larger batch sizes). We recommend experimenting

            with values in the range 0.02 to 0.2 to see what produces the best

            results.

            '
          nullable: true
          type: number
        model:
          anyOf:
          - type: string
          - enum:
            - ada
            - babbage
            - curie
            - davinci
            type: string
          default: curie
          description: 'The name of the base model to fine-tune. You can select one
            of "ada",

            "babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21
            and before 2023-08-22.

            To learn more about these models, see the

            [Models](/docs/models) documentation.

            '
          example: curie
          nullable: true
          x-oaiTypeLabel: string
        prompt_loss_weight:
          default: 0.01
          description: 'The weight to use for loss on the prompt tokens. This controls
            how

            much the model tries to learn to generate the prompt (as compared

            to the completion which always has a weight of 1.0), and can add

            a stabilizing effect to training when completions are short.


            If prompts are extremely long (relative to completions), it may make

            sense to reduce this weight so as to avoid over-prioritizing

            learning the prompt.

            '
          nullable: true
          type: number
        suffix:
          default: null
          description: 'A string of up to 40 characters that will be added to your
            fine-tuned model name.


            For example, a `suffix` of "custom-model-name" would produce a model name
            like `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.

            '
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        training_file:
          description: 'The ID of an uploaded file that contains training data.


            See [upload file](/docs/api-reference/files/upload) for how to upload
            a file.


            Your dataset must be formatted as a JSONL file, where each training

            example is a JSON object with the keys "prompt" and "completion".

            Additionally, you must upload your file with the purpose `fine-tune`.


            See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data)
            for more details.

            '
          example: file-abc123
          type: string
        validation_file:
          description: 'The ID of an uploaded file that contains validation data.


            If you provide this file, the data is used to generate validation

            metrics periodically during fine-tuning. These metrics can be viewed in

            the [fine-tuning results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).

            Your train and validation data should be mutually exclusive.


            Your dataset must be formatted as a JSONL file, where each validation

            example is a JSON object with the keys "prompt" and "completion".

            Additionally, you must upload your file with the purpose `fine-tune`.


            See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data)
            for more details.

            '
          example: file-abc123
          nullable: true
          type: string
      required:
      - training_file
      type: object
    CreateFineTuningJobRequest:
      properties:
        hyperparameters:
          description: The hyperparameters used for the fine-tuning job.
          properties:
            batch_size:
              default: auto
              description: 'Number of examples in each batch. A larger batch size
                means that model parameters

                are updated less frequently, but with lower variance.

                '
              oneOf:
              - enum:
                - auto
                type: string
              - maximum: 256
                minimum: 1
                type: integer
            learning_rate_multiplier:
              default: auto
              description: 'Scaling factor for the learning rate. A smaller learning
                rate may be useful to avoid

                overfitting.

                '
              oneOf:
              - enum:
                - auto
                type: string
              - exclusiveMinimum: true
                minimum: 0
                type: number
            n_epochs:
              default: auto
              description: "The number of epochs to train the model for. An epoch\
                \ refers to one full cycle \nthrough the training dataset.\n"
              oneOf:
              - enum:
                - auto
                type: string
              - maximum: 50
                minimum: 1
                type: integer
          type: object
        model:
          anyOf:
          - type: string
          - enum:
            - babbage-002
            - davinci-002
            - gpt-3.5-turbo
            type: string
          description: 'The name of the model to fine-tune. You can select one of
            the

            [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).

            '
          example: gpt-3.5-turbo
          x-oaiTypeLabel: string
        suffix:
          default: null
          description: 'A string of up to 18 characters that will be added to your
            fine-tuned model name.


            For example, a `suffix` of "custom-model-name" would produce a model name
            like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.

            '
          maxLength: 40
          minLength: 1
          nullable: true
          type: string
        training_file:
          description: 'The ID of an uploaded file that contains training data.


            See [upload file](/docs/api-reference/files/upload) for how to upload
            a file.


            Your dataset must be formatted as a JSONL file. Additionally, you must
            upload your file with the purpose `fine-tune`.


            See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

            '
          example: file-abc123
          type: string
        validation_file:
          description: 'The ID of an uploaded file that contains validation data.


            If you provide this file, the data is used to generate validation

            metrics periodically during fine-tuning. These metrics can be viewed in

            the fine-tuning results file.

            The same data should not be present in both train and validation files.


            Your dataset must be formatted as a JSONL file. You must upload your file
            with the purpose `fine-tune`.


            See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

            '
          example: file-abc123
          nullable: true
          type: string
      required:
      - model
      - training_file
      type: object
    CreateImageEditRequest:
      properties:
        image:
          description: The image to edit. Must be a valid PNG file, less than 4MB,
            and square. If mask is not provided, image must have transparency, which
            will be used as the mask.
          format: binary
          type: string
        mask:
          description: An additional image whose fully transparent areas (e.g. where
            alpha is zero) indicate where `image` should be edited. Must be a valid
            PNG file, less than 4MB, and have the same dimensions as `image`.
          format: binary
          type: string
        model:
          anyOf:
          - type: string
          - enum:
            - dall-e-2
            type: string
          default: dall-e-2
          description: The model to use for image generation. Only `dall-e-2` is supported
            at this time.
          example: dall-e-2
          nullable: true
          x-oaiTypeLabel: string
        n:
          default: 1
          description: The number of images to generate. Must be between 1 and 10.
          example: 1
          maximum: 10
          minimum: 1
          nullable: true
          type: integer
        prompt:
          description: A text description of the desired image(s). The maximum length
            is 1000 characters.
          example: A cute baby sea otter wearing a beret
          type: string
        response_format: &id002
          default: url
          description: The format in which the generated images are returned. Must
            be one of `url` or `b64_json`.
          enum:
          - url
          - b64_json
          example: url
          nullable: true
          type: string
        size: &id004
          default: 1024x1024
          description: The size of the generated images. Must be one of `256x256`,
            `512x512`, or `1024x1024`.
          enum:
          - 256x256
          - 512x512
          - 1024x1024
          example: 1024x1024
          nullable: true
          type: string
        user: *id001
      required:
      - prompt
      - image
      type: object
    CreateImageRequest:
      properties:
        model:
          anyOf:
          - type: string
          - enum:
            - dall-e-2
            - dall-e-3
            type: string
          default: dall-e-2
          description: The model to use for image generation.
          example: dall-e-3
          nullable: true
          x-oaiTypeLabel: string
        n: &id003
          default: 1
          description: The number of images to generate. Must be between 1 and 10.
            For `dall-e-3`, only `n=1` is supported.
          example: 1
          maximum: 10
          minimum: 1
          nullable: true
          type: integer
        prompt:
          description: A text description of the desired image(s). The maximum length
            is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.
          example: A cute baby sea otter
          type: string
        quality:
          default: standard
          description: The quality of the image that will be generated. `hd` creates
            images with finer details and greater consistency across the image. This
            param is only supported for `dall-e-3`.
          enum:
          - standard
          - hd
          example: standard
          type: string
        response_format: *id002
        size:
          default: 1024x1024
          description: The size of the generated images. Must be one of `256x256`,
            `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`,
            `1792x1024`, or `1024x1792` for `dall-e-3` models.
          enum:
          - 256x256
          - 512x512
          - 1024x1024
          - 1792x1024
          - 1024x1792
          example: 1024x1024
          nullable: true
          type: string
        style:
          default: vivid
          description: The style of the generated images. Must be one of `vivid` or
            `natural`. Vivid causes the model to lean towards generating hyper-real
            and dramatic images. Natural causes the model to produce more natural,
            less hyper-real looking images. This param is only supported for `dall-e-3`.
          enum:
          - vivid
          - natural
          example: vivid
          nullable: true
          type: string
        user: *id001
      required:
      - prompt
      type: object
    CreateImageVariationRequest:
      properties:
        image:
          description: The image to use as the basis for the variation(s). Must be
            a valid PNG file, less than 4MB, and square.
          format: binary
          type: string
        model:
          anyOf:
          - type: string
          - enum:
            - dall-e-2
            type: string
          default: dall-e-2
          description: The model to use for image generation. Only `dall-e-2` is supported
            at this time.
          example: dall-e-2
          nullable: true
          x-oaiTypeLabel: string
        n: *id003
        response_format: *id002
        size: *id004
        user: *id001
      required:
      - image
      type: object
    CreateMessageRequest:
      additionalProperties: false
      properties:
        content:
          description: The content of the message.
          maxLength: 32768
          minLength: 1
          type: string
        file_ids:
          default: []
          description: A list of [File](/docs/api-reference/files) IDs that the message
            should use. There can be a maximum of 10 files attached to a message.
            Useful for tools like `retrieval` and `code_interpreter` that can access
            and use files.
          items:
            type: string
          maxItems: 10
          minItems: 1
          type: array
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        role:
          description: The role of the entity that is creating the message. Currently
            only `user` is supported.
          enum:
          - user
          type: string
      required:
      - role
      - content
      type: object
    CreateModerationRequest:
      properties:
        input:
          description: The input text to classify
          oneOf:
          - default: ''
            example: I want to kill them.
            type: string
          - items:
              default: ''
              example: I want to kill them.
              type: string
            type: array
        model:
          anyOf:
          - type: string
          - enum:
            - text-moderation-latest
            - text-moderation-stable
            type: string
          default: text-moderation-latest
          description: 'Two content moderations models are available: `text-moderation-stable`
            and `text-moderation-latest`.


            The default is `text-moderation-latest` which will be automatically upgraded
            over time. This ensures you are always using our most accurate model.
            If you use `text-moderation-stable`, we will provide advanced notice before
            updating the model. Accuracy of `text-moderation-stable` may be slightly
            lower than for `text-moderation-latest`.

            '
          example: text-moderation-stable
          nullable: false
          x-oaiTypeLabel: string
      required:
      - input
      type: object
    CreateModerationResponse:
      description: Represents policy compliance report by OpenAI's content moderation
        model against a given input.
      properties:
        id:
          description: The unique identifier for the moderation request.
          type: string
        model:
          description: The model used to generate the moderation results.
          type: string
        results:
          description: A list of moderation objects.
          items:
            properties:
              categories:
                description: A list of the categories, and whether they are flagged
                  or not.
                properties:
                  harassment:
                    description: Content that expresses, incites, or promotes harassing
                      language towards any target.
                    type: boolean
                  harassment/threatening:
                    description: Harassment content that also includes violence or
                      serious harm towards any target.
                    type: boolean
                  hate:
                    description: Content that expresses, incites, or promotes hate
                      based on race, gender, ethnicity, religion, nationality, sexual
                      orientation, disability status, or caste. Hateful content aimed
                      at non-protected groups (e.g., chess players) is harrassment.
                    type: boolean
                  hate/threatening:
                    description: Hateful content that also includes violence or serious
                      harm towards the targeted group based on race, gender, ethnicity,
                      religion, nationality, sexual orientation, disability status,
                      or caste.
                    type: boolean
                  self-harm:
                    description: Content that promotes, encourages, or depicts acts
                      of self-harm, such as suicide, cutting, and eating disorders.
                    type: boolean
                  self-harm/instructions:
                    description: Content that encourages performing acts of self-harm,
                      such as suicide, cutting, and eating disorders, or that gives
                      instructions or advice on how to commit such acts.
                    type: boolean
                  self-harm/intent:
                    description: Content where the speaker expresses that they are
                      engaging or intend to engage in acts of self-harm, such as suicide,
                      cutting, and eating disorders.
                    type: boolean
                  sexual:
                    description: Content meant to arouse sexual excitement, such as
                      the description of sexual activity, or that promotes sexual
                      services (excluding sex education and wellness).
                    type: boolean
                  sexual/minors:
                    description: Sexual content that includes an individual who is
                      under 18 years old.
                    type: boolean
                  violence:
                    description: Content that depicts death, violence, or physical
                      injury.
                    type: boolean
                  violence/graphic:
                    description: Content that depicts death, violence, or physical
                      injury in graphic detail.
                    type: boolean
                required:
                - hate
                - hate/threatening
                - harassment
                - harassment/threatening
                - self-harm
                - self-harm/intent
                - self-harm/instructions
                - sexual
                - sexual/minors
                - violence
                - violence/graphic
                type: object
              category_scores:
                description: A list of the categories along with their scores as predicted
                  by model.
                properties:
                  harassment:
                    description: The score for the category 'harassment'.
                    type: number
                  harassment/threatening:
                    description: The score for the category 'harassment/threatening'.
                    type: number
                  hate:
                    description: The score for the category 'hate'.
                    type: number
                  hate/threatening:
                    description: The score for the category 'hate/threatening'.
                    type: number
                  self-harm:
                    description: The score for the category 'self-harm'.
                    type: number
                  self-harm/instructions:
                    description: The score for the category 'self-harm/instructions'.
                    type: number
                  self-harm/intent:
                    description: The score for the category 'self-harm/intent'.
                    type: number
                  sexual:
                    description: The score for the category 'sexual'.
                    type: number
                  sexual/minors:
                    description: The score for the category 'sexual/minors'.
                    type: number
                  violence:
                    description: The score for the category 'violence'.
                    type: number
                  violence/graphic:
                    description: The score for the category 'violence/graphic'.
                    type: number
                required:
                - hate
                - hate/threatening
                - harassment
                - harassment/threatening
                - self-harm
                - self-harm/intent
                - self-harm/instructions
                - sexual
                - sexual/minors
                - violence
                - violence/graphic
                type: object
              flagged:
                description: Whether the content violates [OpenAI's usage policies](/policies/usage-policies).
                type: boolean
            required:
            - flagged
            - categories
            - category_scores
            type: object
          type: array
      required:
      - id
      - model
      - results
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"modr-XXXXX\",\n  \"model\": \"text-moderation-005\"\
          ,\n  \"results\": [\n    {\n      \"flagged\": true,\n      \"categories\"\
          : {\n        \"sexual\": false,\n        \"hate\": false,\n        \"harassment\"\
          : false,\n        \"self-harm\": false,\n        \"sexual/minors\": false,\n\
          \        \"hate/threatening\": false,\n        \"violence/graphic\": false,\n\
          \        \"self-harm/intent\": false,\n        \"self-harm/instructions\"\
          : false,\n        \"harassment/threatening\": true,\n        \"violence\"\
          : true,\n      },\n      \"category_scores\": {\n        \"sexual\": 1.2282071e-06,\n\
          \        \"hate\": 0.010696256,\n        \"harassment\": 0.29842457,\n \
          \       \"self-harm\": 1.5236925e-08,\n        \"sexual/minors\": 5.7246268e-08,\n\
          \        \"hate/threatening\": 0.0060676364,\n        \"violence/graphic\"\
          : 4.435014e-06,\n        \"self-harm/intent\": 8.098441e-10,\n        \"\
          self-harm/instructions\": 2.8498655e-11,\n        \"harassment/threatening\"\
          : 0.63055265,\n        \"violence\": 0.99011886,\n      }\n    }\n  ]\n\
          }\n"
        name: The moderation object
    CreateRunRequest:
      additionalProperties: false
      properties:
        assistant_id:
          description: The ID of the [assistant](/docs/api-reference/assistants) to
            use to execute this run.
          type: string
        instructions:
          description: Override the default system message of the assistant. This
            is useful for modifying the behavior on a per-run basis.
          nullable: true
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          description: The ID of the [Model](/docs/api-reference/models) to be used
            to execute this run. If a value is provided here, it will override the
            model associated with the assistant. If not, the model associated with
            the assistant will be used.
          nullable: true
          type: string
        tools:
          description: Override the tools the assistant can use for this run. This
            is useful for modifying the behavior on a per-run basis.
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
            x-oaiExpandable: true
          maxItems: 20
          nullable: true
          type: array
      required:
      - thread_id
      - assistant_id
      type: object
    CreateSpeechRequest:
      additionalProperties: false
      properties:
        input:
          description: The text to generate audio for. The maximum length is 4096
            characters.
          maxLength: 4096
          type: string
        model:
          anyOf:
          - type: string
          - enum:
            - tts-1
            - tts-1-hd
            type: string
          description: 'One of the available [TTS models](/docs/models/tts): `tts-1`
            or `tts-1-hd`

            '
          x-oaiTypeLabel: string
        response_format:
          default: mp3
          description: The format to audio in. Supported formats are `mp3`, `opus`,
            `aac`, and `flac`.
          enum:
          - mp3
          - opus
          - aac
          - flac
          type: string
        speed:
          default: 1.0
          description: The speed of the generated audio. Select a value from `0.25`
            to `4.0`. `1.0` is the default.
          maximum: 4.0
          minimum: 0.25
          type: number
        voice:
          description: The voice to use when generating the audio. Supported voices
            are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`.
          enum:
          - alloy
          - echo
          - fable
          - onyx
          - nova
          - shimmer
          type: string
      required:
      - model
      - input
      - voice
      type: object
    CreateThreadAndRunRequest:
      additionalProperties: false
      properties:
        assistant_id:
          description: The ID of the [assistant](/docs/api-reference/assistants) to
            use to execute this run.
          type: string
        instructions:
          description: Override the default system message of the assistant. This
            is useful for modifying the behavior on a per-run basis.
          nullable: true
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          description: The ID of the [Model](/docs/api-reference/models) to be used
            to execute this run. If a value is provided here, it will override the
            model associated with the assistant. If not, the model associated with
            the assistant will be used.
          nullable: true
          type: string
        thread:
          $ref: '#/components/schemas/CreateThreadRequest'
          description: If no thread is provided, an empty thread will be created.
        tools:
          description: Override the tools the assistant can use for this run. This
            is useful for modifying the behavior on a per-run basis.
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
          maxItems: 20
          nullable: true
          type: array
      required:
      - thread_id
      - assistant_id
      type: object
    CreateThreadRequest:
      additionalProperties: false
      properties:
        messages:
          description: A list of [messages](/docs/api-reference/messages) to start
            the thread with.
          items:
            $ref: '#/components/schemas/CreateMessageRequest'
          type: array
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
      type: object
    CreateTranscriptionRequest:
      additionalProperties: false
      properties:
        file:
          description: 'The audio file object (not file name) to transcribe, in one
            of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

            '
          format: binary
          type: string
          x-oaiTypeLabel: file
        language:
          description: 'The language of the input audio. Supplying the input language
            in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
            format will improve accuracy and latency.

            '
          type: string
        model:
          anyOf:
          - type: string
          - enum:
            - whisper-1
            type: string
          description: 'ID of the model to use. Only `whisper-1` is currently available.

            '
          example: whisper-1
          x-oaiTypeLabel: string
        prompt:
          description: 'An optional text to guide the model''s style or continue a
            previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting)
            should match the audio language.

            '
          type: string
        response_format:
          default: json
          description: 'The format of the transcript output, in one of these options:
            `json`, `text`, `srt`, `verbose_json`, or `vtt`.

            '
          enum:
          - json
          - text
          - srt
          - verbose_json
          - vtt
          type: string
        temperature:
          default: 0
          description: 'The sampling temperature, between 0 and 1. Higher values like
            0.8 will make the output more random, while lower values like 0.2 will
            make it more focused and deterministic. If set to 0, the model will use
            [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically
            increase the temperature until certain thresholds are hit.

            '
          type: number
      required:
      - file
      - model
      type: object
    CreateTranscriptionResponse:
      properties:
        text:
          type: string
      required:
      - text
      type: object
    CreateTranslationRequest:
      additionalProperties: false
      properties:
        file:
          description: 'The audio file object (not file name) translate, in one of
            these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

            '
          format: binary
          type: string
          x-oaiTypeLabel: file
        model:
          anyOf:
          - type: string
          - enum:
            - whisper-1
            type: string
          description: 'ID of the model to use. Only `whisper-1` is currently available.

            '
          example: whisper-1
          x-oaiTypeLabel: string
        prompt:
          description: 'An optional text to guide the model''s style or continue a
            previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting)
            should be in English.

            '
          type: string
        response_format:
          default: json
          description: 'The format of the transcript output, in one of these options:
            `json`, `text`, `srt`, `verbose_json`, or `vtt`.

            '
          type: string
        temperature:
          default: 0
          description: 'The sampling temperature, between 0 and 1. Higher values like
            0.8 will make the output more random, while lower values like 0.2 will
            make it more focused and deterministic. If set to 0, the model will use
            [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically
            increase the temperature until certain thresholds are hit.

            '
          type: number
      required:
      - file
      - model
      type: object
    CreateTranslationResponse:
      properties:
        text:
          type: string
      required:
      - text
      type: object
    DeleteAssistantFileResponse:
      description: Deletes the association between the assistant and the file, but
        does not delete the [File](/docs/api-reference/files) object itself.
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          enum:
          - assistant.file.deleted
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    DeleteAssistantResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          enum:
          - assistant.deleted
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    DeleteFileResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          enum:
          - file
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    DeleteMessageResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          enum:
          - thread.message.deleted
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    DeleteModelResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    DeleteThreadResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
        object:
          enum:
          - thread.deleted
          type: string
      required:
      - id
      - object
      - deleted
      type: object
    Embedding:
      description: 'Represents an embedding vector returned by embedding endpoint.

        '
      properties:
        embedding:
          description: 'The embedding vector, which is a list of floats. The length
            of vector depends on the model as listed in the [embedding guide](/docs/guides/embeddings).

            '
          items:
            type: number
          type: array
        index:
          description: The index of the embedding in the list of embeddings.
          type: integer
        object:
          description: The object type, which is always "embedding".
          enum:
          - embedding
          type: string
      required:
      - index
      - object
      - embedding
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"embedding\",\n  \"embedding\": [\n    0.0023064255,\n\
          \    -0.009327292,\n    .... (1536 floats total for ada-002)\n    -0.0028842222,\n\
          \  ],\n  \"index\": 0\n}\n"
        name: The embedding object
    Error:
      properties:
        code:
          nullable: true
          type: string
        message:
          nullable: false
          type: string
        param:
          nullable: true
          type: string
        type:
          nullable: false
          type: string
      required:
      - type
      - message
      - param
      - code
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      required:
      - error
      type: object
    FineTune:
      deprecated: true
      description: 'The `FineTune` object represents a legacy fine-tune job that has
        been created through the API.

        '
      properties:
        created_at:
          description: The Unix timestamp (in seconds) for when the fine-tuning job
            was created.
          type: integer
        events:
          description: The list of events that have been observed in the lifecycle
            of the FineTune job.
          items:
            $ref: '#/components/schemas/FineTuneEvent'
          type: array
        fine_tuned_model:
          description: The name of the fine-tuned model that is being created.
          nullable: true
          type: string
        hyperparams:
          description: The hyperparameters used for the fine-tuning job. See the [fine-tuning
            guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more details.
          properties:
            batch_size:
              description: 'The batch size to use for training. The batch size is
                the number of

                training examples used to train a single forward and backward pass.

                '
              type: integer
            classification_n_classes:
              description: 'The number of classes to use for computing classification
                metrics.

                '
              type: integer
            classification_positive_class:
              description: 'The positive class to use for computing classification
                metrics.

                '
              type: string
            compute_classification_metrics:
              description: 'The classification metrics to compute using the validation
                dataset at the end of every epoch.

                '
              type: boolean
            learning_rate_multiplier:
              description: 'The learning rate multiplier to use for training.

                '
              type: number
            n_epochs:
              description: 'The number of epochs to train the model for. An epoch
                refers to one

                full cycle through the training dataset.

                '
              type: integer
            prompt_loss_weight:
              description: 'The weight to use for loss on the prompt tokens.

                '
              type: number
          required:
          - batch_size
          - learning_rate_multiplier
          - n_epochs
          - prompt_loss_weight
          type: object
        id:
          description: The object identifier, which can be referenced in the API endpoints.
          type: string
        model:
          description: The base model that is being fine-tuned.
          type: string
        object:
          description: The object type, which is always "fine-tune".
          enum:
          - fine-tune
          type: string
        organization_id:
          description: The organization that owns the fine-tuning job.
          type: string
        result_files:
          description: The compiled results files for the fine-tuning job.
          items:
            $ref: '#/components/schemas/OpenAIFile'
          type: array
        status:
          description: The current status of the fine-tuning job, which can be either
            `created`, `running`, `succeeded`, `failed`, or `cancelled`.
          type: string
        training_files:
          description: The list of files used for training.
          items:
            $ref: '#/components/schemas/OpenAIFile'
          type: array
        updated_at:
          description: The Unix timestamp (in seconds) for when the fine-tuning job
            was last updated.
          type: integer
        validation_files:
          description: The list of files used for validation.
          items:
            $ref: '#/components/schemas/OpenAIFile'
          type: array
      required:
      - created_at
      - fine_tuned_model
      - hyperparams
      - id
      - model
      - object
      - organization_id
      - result_files
      - status
      - training_files
      - updated_at
      - validation_files
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"ft-AF1WoRqd3aJAHsqc9NY7iL8F\",\n  \"object\": \"\
          fine-tune\",\n  \"model\": \"curie\",\n  \"created_at\": 1614807352,\n \
          \ \"events\": [\n    {\n      \"object\": \"fine-tune-event\",\n      \"\
          created_at\": 1614807352,\n      \"level\": \"info\",\n      \"message\"\
          : \"Job enqueued. Waiting for jobs ahead to complete. Queue number: 0.\"\
          \n    },\n    {\n      \"object\": \"fine-tune-event\",\n      \"created_at\"\
          : 1614807356,\n      \"level\": \"info\",\n      \"message\": \"Job started.\"\
          \n    },\n    {\n      \"object\": \"fine-tune-event\",\n      \"created_at\"\
          : 1614807861,\n      \"level\": \"info\",\n      \"message\": \"Uploaded\
          \ snapshot: curie:ft-acmeco-2021-03-03-21-44-20.\"\n    },\n    {\n    \
          \  \"object\": \"fine-tune-event\",\n      \"created_at\": 1614807864,\n\
          \      \"level\": \"info\",\n      \"message\": \"Uploaded result files:\
          \ file-abc123.\"\n    },\n    {\n      \"object\": \"fine-tune-event\",\n\
          \      \"created_at\": 1614807864,\n      \"level\": \"info\",\n      \"\
          message\": \"Job succeeded.\"\n    }\n  ],\n  \"fine_tuned_model\": \"curie:ft-acmeco-2021-03-03-21-44-20\"\
          ,\n  \"hyperparams\": {\n    \"batch_size\": 4,\n    \"learning_rate_multiplier\"\
          : 0.1,\n    \"n_epochs\": 4,\n    \"prompt_loss_weight\": 0.1,\n  },\n \
          \ \"organization_id\": \"org-123\",\n  \"result_files\": [\n    {\n    \
          \  \"id\": \"file-abc123\",\n      \"object\": \"file\",\n      \"bytes\"\
          : 81509,\n      \"created_at\": 1614807863,\n      \"filename\": \"compiled_results.csv\"\
          ,\n      \"purpose\": \"fine-tune-results\"\n    }\n  ],\n  \"status\":\
          \ \"succeeded\",\n  \"validation_files\": [],\n  \"training_files\": [\n\
          \    {\n      \"id\": \"file-abc123\",\n      \"object\": \"file\",\n  \
          \    \"bytes\": 1547276,\n      \"created_at\": 1610062281,\n      \"filename\"\
          : \"my-data-train.jsonl\",\n      \"purpose\": \"fine-tune\"\n    }\n  ],\n\
          \  \"updated_at\": 1614807865,\n}\n"
        name: The fine-tune object
    FineTuneEvent:
      deprecated: true
      description: Fine-tune event object
      properties:
        created_at:
          type: integer
        level:
          type: string
        message:
          type: string
        object:
          enum:
          - fine-tune-event
          type: string
      required:
      - object
      - created_at
      - level
      - message
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"fine-tune-event\",\n  \"created_at\": 1677610602,\n\
          \  \"level\": \"info\",\n  \"message\": \"Created fine-tune job\"\n}\n"
        name: The fine-tune event object
    FineTuningJob:
      description: 'The `fine_tuning.job` object represents a fine-tuning job that
        has been created through the API.

        '
      properties:
        created_at:
          description: The Unix timestamp (in seconds) for when the fine-tuning job
            was created.
          type: integer
        error:
          description: For fine-tuning jobs that have `failed`, this will contain
            more information on the cause of the failure.
          nullable: true
          properties:
            code:
              description: A machine-readable error code.
              type: string
            message:
              description: A human-readable error message.
              type: string
            param:
              description: The parameter that was invalid, usually `training_file`
                or `validation_file`. This field will be null if the failure was not
                parameter-specific.
              nullable: true
              type: string
          required:
          - code
          - message
          - param
          type: object
        fine_tuned_model:
          description: The name of the fine-tuned model that is being created. The
            value will be null if the fine-tuning job is still running.
          nullable: true
          type: string
        finished_at:
          description: The Unix timestamp (in seconds) for when the fine-tuning job
            was finished. The value will be null if the fine-tuning job is still running.
          nullable: true
          type: integer
        hyperparameters:
          description: The hyperparameters used for the fine-tuning job. See the [fine-tuning
            guide](/docs/guides/fine-tuning) for more details.
          properties:
            n_epochs:
              default: auto
              description: 'The number of epochs to train the model for. An epoch
                refers to one full cycle through the training dataset.

                "auto" decides the optimal number of epochs based on the size of the
                dataset. If setting the number manually, we support any number between
                1 and 50 epochs.'
              oneOf:
              - enum:
                - auto
                type: string
              - maximum: 50
                minimum: 1
                type: integer
          required:
          - n_epochs
          type: object
        id:
          description: The object identifier, which can be referenced in the API endpoints.
          type: string
        model:
          description: The base model that is being fine-tuned.
          type: string
        object:
          description: The object type, which is always "fine_tuning.job".
          enum:
          - fine_tuning.job
          type: string
        organization_id:
          description: The organization that owns the fine-tuning job.
          type: string
        result_files:
          description: The compiled results file ID(s) for the fine-tuning job. You
            can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
          items:
            example: file-abc123
            type: string
          type: array
        status:
          description: The current status of the fine-tuning job, which can be either
            `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
          enum:
          - validating_files
          - queued
          - running
          - succeeded
          - failed
          - cancelled
          type: string
        trained_tokens:
          description: The total number of billable tokens processed by this fine-tuning
            job. The value will be null if the fine-tuning job is still running.
          nullable: true
          type: integer
        training_file:
          description: The file ID used for training. You can retrieve the training
            data with the [Files API](/docs/api-reference/files/retrieve-contents).
          type: string
        validation_file:
          description: The file ID used for validation. You can retrieve the validation
            results with the [Files API](/docs/api-reference/files/retrieve-contents).
          nullable: true
          type: string
      required:
      - created_at
      - error
      - finished_at
      - fine_tuned_model
      - hyperparameters
      - id
      - model
      - object
      - organization_id
      - result_files
      - status
      - trained_tokens
      - training_file
      - validation_file
      title: FineTuningJob
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"fine_tuning.job\",\n  \"id\": \"ftjob-abc123\"\
          ,\n  \"model\": \"davinci-002\",\n  \"created_at\": 1692661014,\n  \"finished_at\"\
          : 1692661190,\n  \"fine_tuned_model\": \"ft:davinci-002:my-org:custom_suffix:7q8mpxmy\"\
          ,\n  \"organization_id\": \"org-123\",\n  \"result_files\": [\n      \"\
          file-abc123\"\n  ],\n  \"status\": \"succeeded\",\n  \"validation_file\"\
          : null,\n  \"training_file\": \"file-abc123\",\n  \"hyperparameters\": {\n\
          \      \"n_epochs\": 4,\n  },\n  \"trained_tokens\": 5768\n}\n"
        name: The fine-tuning job object
    FineTuningJobEvent:
      description: Fine-tuning job event object
      properties:
        created_at:
          type: integer
        id:
          type: string
        level:
          enum:
          - info
          - warn
          - error
          type: string
        message:
          type: string
        object:
          enum:
          - fine_tuning.job.event
          type: string
      required:
      - id
      - object
      - created_at
      - level
      - message
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"fine_tuning.job.event\",\n  \"id\": \"ftevent-abc123\"\
          \n  \"created_at\": 1677610602,\n  \"level\": \"info\",\n  \"message\":\
          \ \"Created fine-tuning job\"\n}\n"
        name: The fine-tuning job event object
    FunctionObject:
      properties:
        description:
          description: A description of what the function does, used by the model
            to choose when and how to call the function.
          type: string
        name:
          description: The name of the function to be called. Must be a-z, A-Z, 0-9,
            or contain underscores and dashes, with a maximum length of 64.
          type: string
        parameters:
          $ref: '#/components/schemas/FunctionParameters'
      required:
      - name
      - parameters
      type: object
    FunctionParameters:
      additionalProperties: true
      description: 'The parameters the functions accepts, described as a JSON Schema
        object. See the [guide](/docs/guides/gpt/function-calling) for examples, and
        the [JSON Schema reference](https://json-schema.org/understanding-json-schema/)
        for documentation about the format.


        To describe a function that accepts no parameters, provide the value `{"type":
        "object", "properties": {}}`.'
      type: object
    Image:
      description: Represents the url or the content of an image generated by the
        OpenAI API.
      properties:
        b64_json:
          description: The base64-encoded JSON of the generated image, if `response_format`
            is `b64_json`.
          type: string
        revised_prompt:
          description: The prompt that was used to generate the image, if there was
            any revision to the prompt.
          type: string
        url:
          description: The URL of the generated image, if `response_format` is `url`
            (default).
          type: string
      type: object
      x-oaiMeta:
        example: "{\n  \"url\": \"...\",\n  \"revised_prompt\": \"...\"\n}\n"
        name: The image object
    ImagesResponse:
      properties:
        created:
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Image'
          type: array
      required:
      - created
      - data
    ListAssistantFilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssistantFileObject'
          type: array
        first_id:
          example: file-hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: file-QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - items
      - first_id
      - last_id
      - has_more
    ListAssistantsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssistantObject'
          type: array
        first_id:
          example: asst_hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: asst_QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - first_id
      - last_id
      - has_more
      type: object
      x-oaiMeta:
        example: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"id\":\
          \ \"asst_abc123\",\n      \"object\": \"assistant\",\n      \"created_at\"\
          : 1698982736,\n      \"name\": \"Coding Tutor\",\n      \"description\"\
          : null,\n      \"model\": \"gpt-4\",\n      \"instructions\": \"You are\
          \ a helpful assistant designed to make me better at coding!\",\n      \"\
          tools\": [],\n      \"file_ids\": [],\n      \"metadata\": {}\n    },\n\
          \    {\n      \"id\": \"asst_abc456\",\n      \"object\": \"assistant\"\
          ,\n      \"created_at\": 1698982718,\n      \"name\": \"My Assistant\",\n\
          \      \"description\": null,\n      \"model\": \"gpt-4\",\n      \"instructions\"\
          : \"You are a helpful assistant designed to make me better at coding!\"\
          ,\n      \"tools\": [],\n      \"file_ids\": [],\n      \"metadata\": {}\n\
          \    },\n    {\n      \"id\": \"asst_abc789\",\n      \"object\": \"assistant\"\
          ,\n      \"created_at\": 1698982643,\n      \"name\": null,\n      \"description\"\
          : null,\n      \"model\": \"gpt-4\",\n      \"instructions\": null,\n  \
          \    \"tools\": [],\n      \"file_ids\": [],\n      \"metadata\": {}\n \
          \   }\n  ],\n  \"first_id\": \"asst_abc123\",\n  \"last_id\": \"asst_abc789\"\
          ,\n  \"has_more\": false\n}\n"
        group: chat
        name: List assistants response object
    ListFilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/OpenAIFile'
          type: array
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      type: object
    ListFineTuneEventsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FineTuneEvent'
          type: array
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      type: object
    ListFineTunesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FineTune'
          type: array
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      type: object
    ListFineTuningJobEventsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FineTuningJobEvent'
          type: array
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      type: object
    ListMessageFilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageFileObject'
          type: array
        first_id:
          example: file-hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: file-QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - items
      - first_id
      - last_id
      - has_more
    ListMessagesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageObject'
          type: array
        first_id:
          example: msg_hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: msg_QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - first_id
      - last_id
      - has_more
    ListModelsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Model'
          type: array
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      type: object
    ListPaginatedFineTuningJobsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FineTuningJob'
          type: array
        has_more:
          type: boolean
        object:
          enum:
          - list
          type: string
      required:
      - object
      - data
      - has_more
      type: object
    ListRunStepsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RunStepObject'
          type: array
        first_id:
          example: step_hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: step_QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - first_id
      - last_id
      - has_more
    ListRunsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/RunObject'
          type: array
        first_id:
          example: run_hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: run_QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - first_id
      - last_id
      - has_more
      type: object
    ListThreadsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ThreadObject'
          type: array
        first_id:
          example: asst_hLBK7PXBv5Lr2NQT7KLY0ag1
          type: string
        has_more:
          example: false
          type: boolean
        last_id:
          example: asst_QLoItBbqwyAJEzlTy4y9kOMM
          type: string
        object:
          example: list
          type: string
      required:
      - object
      - data
      - first_id
      - last_id
      - has_more
    MessageContentImageFileObject:
      description: References an image [File](/docs/api-reference/files) in the content
        of a message.
      properties:
        image_file:
          properties:
            file_id:
              description: The [File](/docs/api-reference/files) ID of the image in
                the message content.
              type: string
          required:
          - file_id
          type: object
        type:
          description: Always `image_file`.
          enum:
          - image_file
          type: string
      required:
      - type
      - image_file
      title: Image file
      type: object
    MessageContentTextAnnotationsFileCitationObject:
      description: A citation within the message that points to a specific quote from
        a specific File associated with the assistant or the message. Generated when
        the assistant uses the "retrieval" tool to search files.
      properties:
        end_index:
          minimum: 0
          type: integer
        file_citation:
          properties:
            file_id:
              description: The ID of the specific File the citation is from.
              type: string
            quote:
              description: The specific quote in the file.
              type: string
          required:
          - file_id
          - quote
          type: object
        start_index:
          minimum: 0
          type: integer
        text:
          description: The text in the message content that needs to be replaced.
          type: string
        type:
          description: Always `file_citation`.
          enum:
          - file_citation
          type: string
      required:
      - type
      - text
      - file_citation
      - start_index
      - end_index
      title: File citation
      type: object
    MessageContentTextAnnotationsFilePathObject:
      description: A URL for the file that's generated when the assistant used the
        `code_interpreter` tool to generate a file.
      properties:
        end_index:
          minimum: 0
          type: integer
        file_path:
          properties:
            file_id:
              description: The ID of the file that was generated.
              type: string
          required:
          - file_id
          type: object
        start_index:
          minimum: 0
          type: integer
        text:
          description: The text in the message content that needs to be replaced.
          type: string
        type:
          description: Always `file_path`.
          enum:
          - file_path
          type: string
      required:
      - type
      - text
      - file_path
      - start_index
      - end_index
      title: File path
      type: object
    MessageContentTextObject:
      description: The text content that is part of a message.
      properties:
        text:
          properties:
            annotations:
              items:
                oneOf:
                - $ref: '#/components/schemas/MessageContentTextAnnotationsFileCitationObject'
                - $ref: '#/components/schemas/MessageContentTextAnnotationsFilePathObject'
                x-oaiExpandable: true
              type: array
            value:
              description: The data that makes up the text.
              type: string
          required:
          - value
          - annotations
          type: object
        type:
          description: Always `text`.
          enum:
          - text
          type: string
      required:
      - type
      - text
      title: Text
      type: object
    MessageFileObject:
      description: A list of files attached to a `message`.
      properties:
        created_at:
          description: The Unix timestamp (in seconds) for when the message file was
            created.
          type: integer
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        message_id:
          description: The ID of the [message](/docs/api-reference/messages) that
            the [File](/docs/api-reference/files) is attached to.
          type: string
        object:
          description: The object type, which is always `thread.message.file`.
          enum:
          - thread.message.file
          type: string
      required:
      - id
      - object
      - created_at
      - message_id
      title: Message files
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"file-BK7bzQj3FfZFXr7DbL6xJwfo\",\n  \"object\": \"\
          thread.message.file\",\n  \"created_at\": 1698107661,\n  \"message_id\"\
          : \"message_QLoItBbqwyAJEzlTy4y9kOMM\",\n  \"file_id\": \"file-BK7bzQj3FfZFXr7DbL6xJwfo\"\
          \n}\n"
        name: The message file object
    MessageObject:
      description: Represents a message within a [thread](/docs/api-reference/threads).
      properties:
        assistant_id:
          description: If applicable, the ID of the [assistant](/docs/api-reference/assistants)
            that authored this message.
          nullable: true
          type: string
        content:
          description: The content of the message in array of text and/or images.
          items:
            oneOf:
            - $ref: '#/components/schemas/MessageContentImageFileObject'
            - $ref: '#/components/schemas/MessageContentTextObject'
            x-oaiExpandable: true
          type: array
        created_at:
          description: The Unix timestamp (in seconds) for when the message was created.
          type: integer
        file_ids:
          default: []
          description: A list of [file](/docs/api-reference/files) IDs that the assistant
            should use. Useful for tools like retrieval and code_interpreter that
            can access files. A maximum of 10 files can be attached to a message.
          items:
            type: string
          maxItems: 10
          type: array
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        object:
          description: The object type, which is always `thread.message`.
          enum:
          - thread.message
          type: string
        role:
          description: The entity that produced the message. One of `user` or `assistant`.
          enum:
          - user
          - assistant
          type: string
        run_id:
          description: If applicable, the ID of the [run](/docs/api-reference/runs)
            associated with the authoring of this message.
          nullable: true
          type: string
        thread_id:
          description: The [thread](/docs/api-reference/threads) ID that this message
            belongs to.
          type: string
      required:
      - id
      - object
      - created_at
      - thread_id
      - role
      - content
      - assistant_id
      - run_id
      - file_ids
      - metadata
      title: The message object
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"msg_dKYDWyQvtjDBi3tudL1yWKDa\",\n  \"object\": \"\
          thread.message\",\n  \"created_at\": 1698983503,\n  \"thread_id\": \"thread_RGUhOuO9b2nrktrmsQ2uSR6I\"\
          ,\n  \"role\": \"assistant\",\n  \"content\": [\n    {\n      \"type\":\
          \ \"text\",\n      \"text\": {\n        \"value\": \"Hi! How can I help\
          \ you today?\",\n        \"annotations\": []\n      }\n    }\n  ],\n  \"\
          file_ids\": [],\n  \"assistant_id\": \"asst_ToSF7Gb04YMj8AMMm50ZLLtY\",\n\
          \  \"run_id\": \"run_BjylUJgDqYK9bOhy4yjAiMrn\",\n  \"metadata\": {}\n}\n"
        name: The message object
    Model:
      description: Describes an OpenAI model offering that can be used with the API.
      properties:
        created:
          description: The Unix timestamp (in seconds) when the model was created.
          type: integer
        id:
          description: The model identifier, which can be referenced in the API endpoints.
          type: string
        object:
          description: The object type, which is always "model".
          enum:
          - model
          type: string
        owned_by:
          description: The organization that owns the model.
          type: string
      required:
      - id
      - object
      - created
      - owned_by
      title: Model
      x-oaiMeta:
        example: "{\n  \"id\": \"VAR_model_id\",\n  \"object\": \"model\",\n  \"created\"\
          : 1686935002,\n  \"owned_by\": \"openai\"\n}\n"
        name: The model object
    ModifyAssistantRequest:
      additionalProperties: false
      properties:
        description:
          description: 'The description of the assistant. The maximum length is 512
            characters.

            '
          maxLength: 512
          nullable: true
          type: string
        file_ids:
          default: []
          description: 'A list of [File](/docs/api-reference/files) IDs attached to
            this assistant. There can be a maximum of 20 files attached to the assistant.
            Files are ordered by their creation date in ascending order. If a file
            was previosuly attached to the list but does not show up in the list,
            it will be deleted from the assistant.

            '
          items:
            type: string
          maxItems: 20
          type: array
        instructions:
          description: 'The system instructions that the assistant uses. The maximum
            length is 32768 characters.

            '
          maxLength: 32768
          nullable: true
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          anyOf:
          - type: string
          description: 'ID of the model to use. You can use the [List models](/docs/api-reference/models/list)
            API to see all of your available models, or see our [Model overview](/docs/models/overview)
            for descriptions of them.

            '
        name:
          description: 'The name of the assistant. The maximum length is 256 characters.

            '
          maxLength: 256
          nullable: true
          type: string
        tools:
          default: []
          description: 'A list of tool enabled on the assistant. There can be a maximum
            of 128 tools per assistant. Tools can be of types `code_interpreter`,
            `retrieval`, or `function`.

            '
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
            x-oaiExpandable: true
          maxItems: 128
          type: array
      type: object
    ModifyMessageRequest:
      additionalProperties: false
      properties:
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
      type: object
    ModifyRunRequest:
      additionalProperties: false
      properties:
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
      type: object
    ModifyThreadRequest:
      additionalProperties: false
      properties:
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
      type: object
    OpenAIFile:
      description: The `File` object represents a document that has been uploaded
        to OpenAI.
      properties:
        bytes:
          description: The size of the file, in bytes.
          type: integer
        created_at:
          description: The Unix timestamp (in seconds) for when the file was created.
          type: integer
        filename:
          description: The name of the file.
          type: string
        id:
          description: The file identifier, which can be referenced in the API endpoints.
          type: string
        object:
          description: The object type, which is always `file`.
          enum:
          - file
          type: string
        purpose:
          description: The intended purpose of the file. Supported values are `fine-tune`,
            `fine-tune-results`, `assistants`, and `assistants_output`.
          enum:
          - fine-tune
          - fine-tune-results
          - assistants
          - assistants_output
          type: string
        status:
          deprecated: true
          description: Deprecated. The current status of the file, which can be either
            `uploaded`, `processed`, or `error`.
          enum:
          - uploaded
          - processed
          - error
          type: string
        status_details:
          deprecated: true
          description: Deprecated. For details on why a fine-tuning training file
            failed validation, see the `error` field on `fine_tuning.job`.
          type: string
      required:
      - id
      - object
      - bytes
      - created_at
      - filename
      - purpose
      - status
      title: OpenAIFile
      x-oaiMeta:
        example: "{\n  \"id\": \"file-BK7bzQj3FfZFXr7DbL6xJwfo\",\n  \"object\": \"\
          file\",\n  \"bytes\": 120000,\n  \"created_at\": 1677610602,\n  \"filename\"\
          : \"salesOverview.pdf\",\n  \"purpose\": \"assistants\",\n}\n"
        name: The File object
    RunObject:
      description: Represents an execution run on a [thread](/docs/api-reference/threads).
      properties:
        assistant_id:
          description: The ID of the [assistant](/docs/api-reference/assistants) used
            for execution of this run.
          type: string
        cancelled_at:
          description: The Unix timestamp (in seconds) for when the run was cancelled.
          nullable: true
          type: integer
        completed_at:
          description: The Unix timestamp (in seconds) for when the run was completed.
          nullable: true
          type: integer
        created_at:
          description: The Unix timestamp (in seconds) for when the run was created.
          type: integer
        expires_at:
          description: The Unix timestamp (in seconds) for when the run will expire.
          type: integer
        failed_at:
          description: The Unix timestamp (in seconds) for when the run failed.
          nullable: true
          type: integer
        file_ids:
          default: []
          description: The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants)
            used for this run.
          items:
            type: string
          type: array
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        instructions:
          description: The instructions that the [assistant](/docs/api-reference/assistants)
            used for this run.
          type: string
        last_error:
          description: The last error associated with this run. Will be `null` if
            there are no errors.
          nullable: true
          properties:
            code:
              description: One of `server_error` or `rate_limit_exceeded`.
              enum:
              - server_error
              - rate_limit_exceeded
              type: string
            message:
              description: A human-readable description of the error.
              type: string
          required:
          - code
          - message
          type: object
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        model:
          description: The model that the [assistant](/docs/api-reference/assistants)
            used for this run.
          type: string
        object:
          description: The object type, which is always `thread.run`.
          enum:
          - thread.run
          type: string
        required_action:
          description: Details on the action required to continue the run. Will be
            `null` if no action is required.
          nullable: true
          properties:
            submit_tool_outputs:
              description: Details on the tool outputs needed for this run to continue.
              properties:
                tool_calls:
                  description: A list of the relevant tool calls.
                  items:
                    $ref: '#/components/schemas/RunToolCallObject'
                  type: array
              required:
              - tool_calls
              type: object
            type:
              description: For now, this is always `submit_tool_outputs`.
              enum:
              - submit_tool_outputs
              type: string
          required:
          - type
          - submit_tool_outputs
          type: object
        started_at:
          description: The Unix timestamp (in seconds) for when the run was started.
          nullable: true
          type: integer
        status:
          description: The status of the run, which can be either `queued`, `in_progress`,
            `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or
            `expired`.
          enum:
          - queued
          - in_progress
          - requires_action
          - cancelling
          - cancelled
          - failed
          - completed
          - expired
          type: string
        thread_id:
          description: The ID of the [thread](/docs/api-reference/threads) that was
            executed on as a part of this run.
          type: string
        tools:
          default: []
          description: The list of tools that the [assistant](/docs/api-reference/assistants)
            used for this run.
          items:
            oneOf:
            - $ref: '#/components/schemas/AssistantToolsCode'
            - $ref: '#/components/schemas/AssistantToolsRetrieval'
            - $ref: '#/components/schemas/AssistantToolsFunction'
            x-oaiExpandable: true
          maxItems: 20
          type: array
      required:
      - id
      - object
      - created_at
      - thread_id
      - assistant_id
      - status
      - required_action
      - last_error
      - expires_at
      - started_at
      - cancelled_at
      - failed_at
      - completed_at
      - model
      - instructions
      - tools
      - file_ids
      - metadata
      title: A run on a thread
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"run_example123\",\n  \"object\": \"thread.run\",\n\
          \  \"created_at\": 1698107661,\n  \"assistant_id\": \"asst_gZ1aOomboBuYWPcXJx4vAYB0\"\
          ,\n  \"thread_id\": \"thread_adOpf7Jbb5Abymz0QbwxAh3c\",\n  \"status\":\
          \ \"completed\",\n  \"started_at\": 1699073476,\n  \"expires_at\": null,\n\
          \  \"cancelled_at\": null,\n  \"failed_at\": null,\n  \"completed_at\":\
          \ 1699073498,\n  \"last_error\": null,\n  \"model\": \"gpt-4\",\n  \"instructions\"\
          : null,\n  \"tools\": [{\"type\": \"retrieval\"}, {\"type\": \"code_interpreter\"\
          }],\n  \"file_ids\": [],\n  \"metadata\": {}\n}\n"
        name: The run object
    RunStepDetailsMessageCreationObject:
      description: Details of the message creation by the run step.
      properties:
        message_creation:
          properties:
            message_id:
              description: The ID of the message that was created by this run step.
              type: string
          required:
          - message_id
          type: object
        type:
          description: Always `message_creation``.
          enum:
          - message_creation
          type: string
      required:
      - type
      - message_creation
      title: Message creation
      type: object
    RunStepDetailsToolCallsCodeObject:
      description: Details of the Code Interpreter tool call the run step was involved
        in.
      properties:
        code_interpreter:
          description: The Code Interpreter tool call definition.
          properties:
            input:
              description: The input to the Code Interpreter tool call.
              type: string
            outputs:
              description: The outputs from the Code Interpreter tool call. Code Interpreter
                can output one or more items, including text (`logs`) or images (`image`).
                Each of these are represented by a different object type.
              items:
                oneOf:
                - $ref: '#/components/schemas/RunStepDetailsToolCallsCodeOutputLogsObject'
                - $ref: '#/components/schemas/RunStepDetailsToolCallsCodeOutputImageObject'
                type: object
                x-oaiExpandable: true
              type: array
          required:
          - input
          - outputs
          type: object
        id:
          description: The ID of the tool call.
          type: string
        type:
          description: The type of tool call. This is always going to be `code_interpreter`
            for this type of tool call.
          enum:
          - code_interpreter
          type: string
      required:
      - id
      - type
      - code_interpreter
      title: Code interpreter tool call
      type: object
    RunStepDetailsToolCallsCodeOutputImageObject:
      properties:
        image:
          properties:
            file_id:
              description: The [file](/docs/api-reference/files) ID of the image.
              type: string
          required:
          - file_id
          type: object
        type:
          description: Always `image`.
          enum:
          - image
          type: string
      required:
      - type
      - image
      title: Code interpreter image output
      type: object
    RunStepDetailsToolCallsCodeOutputLogsObject:
      description: Text output from the Code Interpreter tool call as part of a run
        step.
      properties:
        logs:
          description: The text output from the Code Interpreter tool call.
          type: string
        type:
          description: Always `logs`.
          enum:
          - logs
          type: string
      required:
      - type
      - logs
      title: Code interpreter log output
      type: object
    RunStepDetailsToolCallsFunctionObject:
      properties:
        function:
          description: The definition of the function that was called.
          properties:
            arguments:
              description: The arguments passed to the function.
              type: string
            name:
              description: The name of the function.
              type: string
            output:
              description: The output of the function. This will be `null` if the
                outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs)
                yet.
              nullable: true
              type: string
          required:
          - name
          - arguments
          - output
          type: object
        id:
          description: The ID of the tool call object.
          type: string
        type:
          description: The type of tool call. This is always going to be `function`
            for this type of tool call.
          enum:
          - function
          type: string
      required:
      - id
      - type
      - function
      title: Function tool call
      type: object
    RunStepDetailsToolCallsObject:
      description: Details of the tool call.
      properties:
        tool_calls:
          description: 'An array of tool calls the run step was involved in. These
            can be associated with one of three types of tools: `code_interpreter`,
            `retrieval`, or `function`.

            '
          items:
            oneOf:
            - $ref: '#/components/schemas/RunStepDetailsToolCallsCodeObject'
            - $ref: '#/components/schemas/RunStepDetailsToolCallsRetrievalObject'
            - $ref: '#/components/schemas/RunStepDetailsToolCallsFunctionObject'
            type: object
            x-oaiExpandable: true
          type: array
        type:
          description: Always `tool_calls`.
          enum:
          - tool_calls
          type: string
      required:
      - type
      - tool_calls
      title: Tool calls
      type: object
    RunStepDetailsToolCallsRetrievalObject:
      properties:
        id:
          description: The ID of the tool call object.
          type: string
        retrieval:
          description: For now, this is always going to be an empty object.
          type: object
          x-oaiTypeLabel: map
        type:
          description: The type of tool call. This is always going to be `retrieval`
            for this type of tool call.
          enum:
          - retrieval
          type: string
      required:
      - id
      - type
      - retrieval
      title: Retrieval tool call
      type: object
    RunStepObject:
      description: 'Represents a step in execution of a run.

        '
      properties:
        assistant_id:
          description: The ID of the [assistant](/docs/api-reference/assistants) associated
            with the run step.
          type: string
        cancelled_at:
          description: The Unix timestamp (in seconds) for when the run step was cancelled.
          nullable: true
          type: integer
        completed_at:
          description: The Unix timestamp (in seconds) for when the run step completed.
          nullable: true
          type: integer
        created_at:
          description: The Unix timestamp (in seconds) for when the run step was created.
          type: integer
        expired_at:
          description: The Unix timestamp (in seconds) for when the run step expired.
            A step is considered expired if the parent run is expired.
          nullable: true
          type: integer
        failed_at:
          description: The Unix timestamp (in seconds) for when the run step failed.
          nullable: true
          type: integer
        id:
          description: The identifier of the run step, which can be referenced in
            API endpoints.
          type: string
        last_error:
          description: The last error associated with this run step. Will be `null`
            if there are no errors.
          nullable: true
          properties:
            code:
              description: One of `server_error` or `rate_limit_exceeded`.
              enum:
              - server_error
              - rate_limit_exceeded
              type: string
            message:
              description: A human-readable description of the error.
              type: string
          required:
          - code
          - message
          type: object
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        object:
          description: The object type, which is always `thread.run.step``.
          enum:
          - thread.run.step
          type: string
        run_id:
          description: The ID of the [run](/docs/api-reference/runs) that this run
            step is a part of.
          type: string
        status:
          description: The status of the run step, which can be either `in_progress`,
            `cancelled`, `failed`, `completed`, or `expired`.
          enum:
          - in_progress
          - cancelled
          - failed
          - completed
          - expired
          type: string
        step_details:
          description: The details of the run step.
          oneOf:
          - $ref: '#/components/schemas/RunStepDetailsMessageCreationObject'
          - $ref: '#/components/schemas/RunStepDetailsToolCallsObject'
          type: object
          x-oaiExpandable: true
        thread_id:
          description: The ID of the [thread](/docs/api-reference/threads) that was
            run.
          type: string
        type:
          description: The type of run step, which can be either `message_creation`
            or `tool_calls`.
          enum:
          - message_creation
          - tool_calls
          type: string
      required:
      - id
      - object
      - created_at
      - assistant_id
      - thread_id
      - run_id
      - type
      - status
      - step_details
      - last_error
      - expired_at
      - cancelled_at
      - failed_at
      - completed_at
      - metadata
      title: Run steps
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"step_QyjyrsVsysd7F4K894BZHG97\",\n  \"object\": \"\
          thread.run.step\",\n  \"created_at\": 1699063291,\n  \"run_id\": \"run_UWvV94U0FQYiT2rlbBrdEVmC\"\
          ,\n  \"assistant_id\": \"asst_nGl00s4xa9zmVY6Fvuvz9wwQ\",\n  \"thread_id\"\
          : \"thread_BDDwIqM4KgHibXX3mqmN3Lgs\",\n  \"type\": \"message_creation\"\
          ,\n  \"status\": \"completed\",\n  \"cancelled_at\": null,\n  \"completed_at\"\
          : 1699063291,\n  \"expired_at\": null,\n  \"failed_at\": null,\n  \"last_error\"\
          : null,\n  \"step_details\": {\n    \"type\": \"message_creation\",\n  \
          \  \"message_creation\": {\n      \"message_id\": \"msg_6YmiCRmMbbE6FALYNePPHqwm\"\
          \n    }\n  }\n}\n"
        name: The run step object
    RunToolCallObject:
      description: Tool call objects
      properties:
        function:
          description: The function definition.
          properties:
            arguments:
              description: The arguments that the model expects you to pass to the
                function.
              type: string
            name:
              description: The name of the function.
              type: string
          required:
          - name
          - arguments
          type: object
        id:
          description: The ID of the tool call. This ID must be referenced when you
            submit the tool outputs in using the [Submit tool outputs to run](/docs/api-reference/runs/submitToolOutputs)
            endpoint.
          type: string
        type:
          description: The type of tool call the output is required for. For now,
            this is always `function`.
          enum:
          - function
          type: string
      required:
      - id
      - type
      - function
      type: object
    SubmitToolOutputsRunRequest:
      additionalProperties: false
      properties:
        tool_outputs:
          description: A list of tools for which the outputs are being submitted.
          items:
            properties:
              output:
                description: The output of the tool call to be submitted to continue
                  the run.
                type: string
              tool_call_id:
                description: The ID of the tool call in the `required_action` object
                  within the run object the output is being submitted for.
                type: string
            type: object
          type: array
      required:
      - tool_outputs
      type: object
    ThreadObject:
      description: Represents a thread that contains [messages](/docs/api-reference/messages).
      properties:
        created_at:
          description: The Unix timestamp (in seconds) for when the thread was created.
          type: integer
        id:
          description: The identifier, which can be referenced in API endpoints.
          type: string
        metadata:
          description: 'Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the object
            in a structured format. Keys can be a maximum of 64 characters long and
            values can be a maxium of 512 characters long.

            '
          nullable: true
          type: object
          x-oaiTypeLabel: map
        object:
          description: The object type, which is always `thread`.
          enum:
          - thread
          type: string
      required:
      - id
      - object
      - created_at
      - metadata
      title: Thread
      type: object
      x-oaiMeta:
        beta: true
        example: "{\n  \"id\": \"thread_abc123\",\n  \"object\": \"thread\",\n  \"\
          created_at\": 1698107661,\n  \"metadata\": {}\n}\n"
        name: The thread object
  securitySchemes:
    ApiKeyAuth:
      scheme: bearer
      type: http
info:
  description: API mimicking OpenAI's chat completion functionality.
  title: Portkey API
  version: 1.0.0
openapi: 3.0.0
paths:
  /chat/completions:
    post:
      operationId: createChatCompletion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatCompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChatCompletionResponse'
          description: OK
      summary: Creates a model response for the given chat conversation.
      tags:
      - Chat
      x-oaiMeta:
        examples:
        - request:
            curl: "curl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type:\
              \ application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\"\
              \ \\\n  -d '{\n    \"model\": \"VAR_model_id\",\n    \"messages\": [\n\
              \      {\n        \"role\": \"system\",\n        \"content\": \"You\
              \ are a helpful assistant.\"\n      },\n      {\n        \"role\": \"\
              user\",\n        \"content\": \"Hello!\"\n      }\n    ]\n  }'\n"
            node.js: "import OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\
              \nasync function main() {\n  const completion = await openai.chat.completions.create({\n\
              \    messages: [{ role: \"system\", content: \"You are a helpful assistant.\"\
              \ }],\n    model: \"VAR_model_id\",\n  });\n\n  console.log(completion.choices[0]);\n\
              }\n\nmain();"
            python: "from openai import OpenAI\nclient = OpenAI()\n\ncompletion =\
              \ client.chat.completions.create(\n  model=\"VAR_model_id\",\n  messages=[\n\
              \    {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"\
              },\n    {\"role\": \"user\", \"content\": \"Hello!\"}\n  ]\n)\n\nprint(completion.choices[0].message)\n"
          response: "{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\"\
            ,\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n\
            \  \"system_fingerprint\": \"fp_44709d6fcb\",\n  \"choices\": [{\n   \
            \ \"index\": 0,\n    \"message\": {\n      \"role\": \"assistant\",\n\
            \      \"content\": \"\\n\\nHello there, how may I assist you today?\"\
            ,\n    },\n    \"finish_reason\": \"stop\"\n  }],\n  \"usage\": {\n  \
            \  \"prompt_tokens\": 9,\n    \"completion_tokens\": 12,\n    \"total_tokens\"\
            : 21\n  }\n}\n"
          title: Default
        - request:
            curl: "curl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type:\
              \ application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\"\
              \ \\\n  -d '{\n    \"model\": \"gpt-4-vision-preview\",\n    \"messages\"\
              : [\n      {\n        \"role\": \"user\",\n        \"content\": [\n\
              \          {\n            \"type\": \"text\",\n            \"text\"\
              : \"What\u2019s in this image?\"\n          },\n          {\n      \
              \      \"type\": \"image_url\",\n            \"image_url\": {\n    \
              \          \"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\
              \n            }\n          }\n        ]\n      }\n    ],\n    \"max_tokens\"\
              : 300\n  }'\n"
            node.js: "import OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\
              \nasync function main() {\n  const response = await openai.chat.completions.create({\n\
              \    model: \"gpt-4-vision-preview\",\n    messages: [\n      {\n  \
              \      role: \"user\",\n        content: [\n          { type: \"text\"\
              , text: \"What\u2019s in this image?\" },\n          {\n           \
              \ type: \"image_url\",\n            image_url:\n              \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\
              ,\n          },\n        ],\n      },\n    ],\n  });\n  console.log(response.choices[0]);\n\
              }\nmain();"
            python: "from openai import OpenAI\n\nclient = OpenAI()\n\nresponse =\
              \ client.chat.completions.create(\n    model=\"gpt-4-vision-preview\"\
              ,\n    messages=[\n        {\n            \"role\": \"user\",\n    \
              \        \"content\": [\n                {\"type\": \"text\", \"text\"\
              : \"What\u2019s in this image?\"},\n                {\n            \
              \        \"type\": \"image_url\",\n                    \"image_url\"\
              : \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg\"\
              ,\n                },\n            ],\n        }\n    ],\n    max_tokens=300,\n\
              )\n\nprint(response.choices[0])\n"
          response: "{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\"\
            ,\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n\
            \  \"system_fingerprint\": \"fp_44709d6fcb\",\n  \"choices\": [{\n   \
            \ \"index\": 0,\n    \"message\": {\n      \"role\": \"assistant\",\n\
            \      \"content\": \"\\n\\nHello there, how may I assist you today?\"\
            ,\n    },\n    \"finish_reason\": \"stop\"\n  }],\n  \"usage\": {\n  \
            \  \"prompt_tokens\": 9,\n    \"completion_tokens\": 12,\n    \"total_tokens\"\
            : 21\n  }\n}\n"
          title: Image input
        - request:
            curl: "curl https://api.openai.com/v1/chat/completions \\\n  -H \"Content-Type:\
              \ application/json\" \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\"\
              \ \\\n  -d '{\n    \"model\": \"VAR_model_id\",\n    \"messages\": [\n\
              \      {\n        \"role\": \"system\",\n        \"content\": \"You\
              \ are a helpful assistant.\"\n      },\n      {\n        \"role\": \"\
              user\",\n        \"content\": \"Hello!\"\n      }\n    ],\n    \"stream\"\
              : true\n  }'\n"
            node.js: "import OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\
              \nasync function main() {\n  const completion = await openai.chat.completions.create({\n\
              \    model: \"VAR_model_id\",\n    messages: [\n      {\"role\": \"\
              system\", \"content\": \"You are a helpful assistant.\"},\n      {\"\
              role\": \"user\", \"content\": \"Hello!\"}\n    ],\n    stream: true,\n\
              \  });\n\n  for await (const chunk of completion) {\n    console.log(chunk.choices[0].delta.content);\n\
              \  }\n}\n\nmain();"
            python: "from openai import OpenAI\nclient = OpenAI()\n\ncompletion =\
              \ client.chat.completions.create(\n  model=\"VAR_model_id\",\n  messages=[\n\
              \    {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"\
              },\n    {\"role\": \"user\", \"content\": \"Hello!\"}\n  ],\n  stream=True\n\
              )\n\nfor chunk in completion:\n  print(chunk.choices[0].delta)\n"
          response: '{"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"role":"assistant","content":""},"finish_reason":null}]}


            {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"Hello"},"finish_reason":null}]}


            {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"!"},"finish_reason":null}]}


            ....


            {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"
            today"},"finish_reason":null}]}


            {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{"content":"?"},"finish_reason":null}]}


            {"id":"chatcmpl-123","object":"chat.completion.chunk","created":1694268190,"model":"gpt-3.5-turbo-0613",
            "system_fingerprint": "fp_44709d6fcb", "choices":[{"index":0,"delta":{},"finish_reason":"stop"}]}

            '
          title: Streaming
        - request:
            curl: "curl https://api.openai.com/v1/chat/completions \\\n-H \"Content-Type:\
              \ application/json\" \\\n-H \"Authorization: Bearer $OPENAI_API_KEY\"\
              \ \\\n-d '{\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [\n  \
              \  {\n      \"role\": \"user\",\n      \"content\": \"What is the weather\
              \ like in Boston?\"\n    }\n  ],\n  \"functions\": [\n    {\n      \"\
              name\": \"get_current_weather\",\n      \"description\": \"Get the current\
              \ weather in a given location\",\n      \"parameters\": {\n        \"\
              type\": \"object\",\n        \"properties\": {\n          \"location\"\
              : {\n            \"type\": \"string\",\n            \"description\"\
              : \"The city and state, e.g. San Francisco, CA\"\n          },\n   \
              \       \"unit\": {\n            \"type\": \"string\",\n           \
              \ \"enum\": [\"celsius\", \"fahrenheit\"]\n          }\n        },\n\
              \        \"required\": [\"location\"]\n      }\n    }\n  ],\n  \"function_call\"\
              : \"auto\"\n}'\n"
            node.js: "import OpenAI from \"openai\";\n\nconst openai = new OpenAI();\n\
              \nasync function main() {\n  const messages = [{\"role\": \"user\",\
              \ \"content\": \"What's the weather like in Boston today?\"}];\n  const\
              \ functions = [\n      {\n          \"name\": \"get_current_weather\"\
              ,\n          \"description\": \"Get the current weather in a given location\"\
              ,\n          \"parameters\": {\n              \"type\": \"object\",\n\
              \              \"properties\": {\n                  \"location\": {\n\
              \                      \"type\": \"string\",\n                     \
              \ \"description\": \"The city and state, e.g. San Francisco, CA\",\n\
              \                  },\n                  \"unit\": {\"type\": \"string\"\
              , \"enum\": [\"celsius\", \"fahrenheit\"]},\n              },\n    \
              \          \"required\": [\"location\"],\n          },\n      }\n  ];\n\
              \n  const response = await openai.chat.completions.create({\n      model:\
              \ \"gpt-3.5-turbo\",\n      messages: messages,\n      functions: functions,\n\
              \      function_call: \"auto\",  // auto is default, but we'll be explicit\n\
              \  });\n\n  console.log(response);\n}\n\nmain();"
            python: "from openai import OpenAI\nclient = OpenAI()\n\nfunctions = [\n\
              \  {\n    \"name\": \"get_current_weather\",\n    \"description\": \"\
              Get the current weather in a given location\",\n    \"parameters\":\
              \ {\n        \"type\": \"object\",\n        \"properties\": {\n    \
              \        \"location\": {\n                \"type\": \"string\",\n  \
              \              \"description\": \"The city and state, e.g. San Francisco,\
              \ CA\",\n            },\n            \"unit\": {\"type\": \"string\"\
              , \"enum\": [\"celsius\", \"fahrenheit\"]},\n        },\n        \"\
              required\": [\"location\"],\n    },\n  }\n]\nmessages = [{\"role\":\
              \ \"user\", \"content\": \"What's the weather like in Boston today?\"\
              }]\ncompletion = client.chat.completions.create(\n  model=\"VAR_model_id\"\
              ,\n  messages=messages,\n  functions=functions,\n  function_call=\"\
              auto\"\n)\n\nprint(completion)\n"
          response: "{\n  \"choices\": [\n    {\n      \"finish_reason\": \"function_call\"\
            ,\n      \"index\": 0,\n      \"message\": {\n        \"content\": null,\n\
            \        \"function_call\": {\n          \"arguments\": \"{\\n  \\\"location\\\
            \": \\\"Boston, MA\\\"\\n}\",\n          \"name\": \"get_current_weather\"\
            \n        },\n        \"role\": \"assistant\"\n      }\n    }\n  ],\n\
            \  \"created\": 1694028367,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"\
            system_fingerprint\": \"fp_44709d6fcb\",\n  \"object\": \"chat.completion\"\
            ,\n  \"usage\": {\n    \"completion_tokens\": 18,\n    \"prompt_tokens\"\
            : 82,\n    \"total_tokens\": 100\n  }\n}\n"
          title: Function calling
        group: chat
        name: Create chat completion
        path: create
        returns: 'Returns a [chat completion](/docs/api-reference/chat/object) object,
          or a streamed sequence of [chat completion chunk](/docs/api-reference/chat/streaming)
          objects if the request is streamed.

          '
security:
- ApiKeyAuth: []
servers:
- url: https://api.portkey.ai
